\ Experiment with CZ 101 SYSEX messages.\\ Author: Phil Burk\ Copyright 1987 -  Phil Burk, Larry Polansky, David Rosenboom.\ All Rights ReservedMRESET DOWNLOAD:ANEW TASK-CZ_EXPTHEX\ Casio CZ-101 support.: CZ.XMIT.HEADER ( -- , send header )    midi.start.sysex    44 midi.xmit   ( Casio ID )    00 midi.xmit 00 midi.xmit    70 midi.cvm;: MIDI.WAIT  ( -- byte , wait for a byte )    BEGIN        ?terminal abort" MIDI.WAIT aborted!"        midi.recv    UNTIL;: MIDI.WAIT.SYSEX  ( -- , wait until SYSEX start received)    BEGIN        midi.recv        IF F0 =        ELSE ?terminal abort" MIDI.WAIT.SYSEX aborted!"            false        THEN    UNTIL;: MIDI.RECV.CHECK ( byte -- , set error if not right byte )    midi.wait - abort" MIDI.RECV.CHECK - bad char!";: CZ.RECV.HEADER ( -- , receive header )    midi.wait.sysex    44 midi.recv.check    00 midi.recv.check    00 midi.recv.check    70 midi.orch midi.recv.check;: CZ.MESSAGE ( data message -- , send message with handshake )    cz.xmit.header    midi.xmit    midi.xmit    midi.flush;: CZ.HANDSHAKE ( data message -- , send message with handshake )    cz.message    cz.recv.header    30 midi.recv.check;: CZ.DOWNLOAD ( tone -- , send request 1 message )    10 cz.handshake    70 midi.cvm    31 midi.xmit midi.flush;: CZ.UPLOAD ( tone -- , receive request 1 message )    20 cz.handshake;: TCR midi.clear 3 cz.download midi.scope ;METHOD DOWNLOAD:METHOD UPLOAD:hex:CLASS OB.CZ.PRESET <SUPER OB.LIST:M NEW:    free: self    1 set.width: self    90 new: super;M:M DOWNLOAD: ( tone -- )    clear: self    cz.download    BEGIN        midi.wait        dup F7 -    WHILE        midi.wait ( -- lo hi )        swap hilo->byte        add: self    REPEAT drop    midi.end.sysex;M:M UPLOAD: ( tone -- )    cz.upload    many: self 0    DO  i get: self        midi.xmit.lohi    LOOP    midi.end.sysex;M;CLASS    DECIMAL