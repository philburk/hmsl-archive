\ Macintosh specific support for HMSL Forth\\ *********************************************************************\ * HMSL Forth System                                                 *\ * Author: Phil Burk                                                 *\ * Copyright 1989 Phil Burk , All Rights Reserved                    *\ *********************************************************************\ MOD: PLB 6/13/91 Make F:1 use real color.ANEW TASK-MAC_MISC$ 2F4 constant CaretTime: TEXTFONT  ( font -- )	textfont()	adjust.screen update.screen;: TEXTSIZE  ( size -- )	textsize()	adjust.screen update.screen;: ?SHIFT   ( -- flag , was shift key held down for last event )	last-event ..@ er_modifiers $ 200 and 0= 0=;\ Set foreground text colors.: F:1 33 foreColor() ;: F:2 409 foreColor() ;: F:3 205 foreColor() ;: F:4 341 foreColor() ;\ Standard File Package Support --------------------------------------:STRUCT SFReply	byte	sfr_good	byte	sfr_copy	long	sfr_fType	short	sfr_vRefNum	short	sfr_version	64 bytes sfr_fName;STRUCT: SFPutFile()  ( wherePoint prompt  $origname dlgHook &reply -- )	4 pick >r	3 pick >r	rot >r swap >r >r	1 w>r  ( routine selector )	trap: A9EA  ( _pack3 )	2drop ( left from pick );SFReply mySFReply: SFPutFile (  $origname x y $prompt -- $filename vRefNum true | 0 )	>r swap 16 shift or ( -- $name xy )	r> rot 0 mySFReply	SFPutFile()	mySFReply ..@ sfr_good	IF	mySFReply .. sfr_fName		mySFReply ..@ sfr_vRefNum		true	ELSE 0	THEN;: FOPEN.ASK.PUT (  $origname x y $prompt -- filename fileid true | 0 )	SFPutFile	IF over >r		new $fopen.vr dup		IF r> swap true		ELSE rdrop		THEN	ELSE 0	THEN;\ Dialog Supportvariable ITEM-HITvariable ITEM-TYPEvariable ITEM-HANDLErect ITEM-BOX-RECT: DIALOG.X  ( $string itemid dlgid -- itemHit )\ Set static text in dialog and wait for modal response	0 -1 GetNewDialog()	dup>r swap ( -- $string dlg-handle itemid )	item-type item-handle item-box-rect GetDitem()	item-handle @ swap SetIText()	0 item-hit ModalDialog()	r> DisposeDialog()	item-hit w@;: DIALOG.A  ( $string -- )	2 130 dialog.x drop;: DIALOG.A/B  ( $string -- flag )	3 131 dialog.x  1 =;: DIALOG.Y/N/C  ( $string -- item , 1 = yes, 2 = no , 3 = cancel )	4 132 dialog.x;: DIALOG.GET.FILE ( $prompt -- $file refnum true | false )	sfgetfilep ( fname vref true | false )	IF		>r dup r> $fopen_vr ?dup		IF true		ELSE drop false		THEN	ELSE		false	THEN;: DIALOG.PUT.FILE ( $origname $prompt  -- $file refnum true | false )	>r 30 20 ( x y ) r> fopen.ask.put;\ Use status register to control interrupt level.\ These require supervisor level.: DISABLE.VIA  ( -- status-reg , disable VIA interrupts )	[	$ 40C0 w,	\ move.w	sr,d0	$ 2D00 w,	\ move.l	d0,-(a6)	$ 007C w, $ 0700 w, \ ori	#$0700,sr  ; all off	$ 027C w, $ F9FF w, \ andi	#$F9FF,sr  ; higher then 1 ok	];: DISABLE.SCC  ( -- status-reg , disable SCC interrupts )	[	$ 40C0 w,	\ move.w	sr,d0	$ 2D00 w,	\ move.l	d0,-(a6)	$ 007C w, $ 0300 w, \ ori	#$0300,sr	];: RESTORE.SR  ( status-reg -- , enable background processing )	[	$ 201E w,	\ move.l	(a6)+,d0	$ 46C0 w,	\ move.w	d0,sr	];