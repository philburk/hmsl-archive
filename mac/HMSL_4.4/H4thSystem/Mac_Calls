\ Macintosh System Calls\\ *********************************************************************\ * HMSL Forth System                                                 *\ * Author: Phil Burk                                                 *\ * Copyright 1989 Phil Burk , All Rights Reserved                    *\ *********************************************************************anew TASK-Mac_CallsHEX: TRAP:  ( <number> -- , compile trap: number )	?comp	base @ hex	bl word number?	IF drop dup A000 B0000 within		IF w,		ELSE .hex ." trap: - Not between A000>B000!" abort		THEN	ELSE ." trap: - Not a valid number!" abort	THEN	base !; immediatedecimal\ Support for parameter passing\ The call     PASS: 424\ should compile\     move.l  8(a6),-(a7)\     move.w  4(a6),-(a7)\     move.l  (a6),-(a7)\     adda.l  $0c,a6      drop16 constant MAX_PASS_PARAMSCREATE PASS-PAD  max_pass_params allot: LAY.OFFSET  ( bump index -- )    pass-pad c@ 1- swap - cells + w,;: PASS:   ( <parameter_lengths> -- )	bl word dup c@ max_pass_params > abort" PASS: too many parameters!"	pass-pad $move	pass-pad c@ 0	DO		pass-pad 1+ i + c@		CASE			ascii 4 OF $ 2F2E w, 0 i lay.offset ENDOF			ascii 2 OF $ 3F2E w, 2 i lay.offset ENDOF			ascii 1 OF $ 3F2E w, 2 i lay.offset ENDOF			. ." ILLEGAL WIDTH IN PASS:" abort		ENDCASE	LOOP\ Lay down ADDA.L	$ DDFC w,  pass-pad c@ cells ,; immediate: MASK16   ( n -- n' , mask off high 16 bits )	65535 and;\ Memory Management: NewPtr() ( size -- address | NIL )	d0! trap: A11E a0@;: DisposPtr() ( addr -- , free memory )	a0! trap: A01F 	d0@ mask16	IF ." DisposPtr() -- Attempt to dispose a free block!" abort	THEN;\ Misc calls: SysBeep()  ( ticks -- )	w>r trap: a9c8;: TickCount()  ( -- ticks , get time )	0 >r trap: a975 r>;: SystemTask()  ( -- )	trap: a9b4;\ QuickDraw Calls: GlobalToLocal() ( var-point -- )	>r trap: a871;: LocalToGlobal()  ( var:Pnt -- )	>r trap: a870;: SetPort()  ( port -- )	>r trap: a873;: Moveto() ( x y -- )	swap w>r w>r trap: a893;: Lineto() ( x y -- )	swap w>r w>r trap: a891;: TextMode() ( mode -- )	w>r trap: a889;: TextSize() ( size -- )	w>r trap: a88a;: TextFont() ( font -- )	w>r trap: a887;: SET.TEXT.SIZE  ( size -- )	Textsize() update.screen;: SET.TEXT.FONT  ( size -- )	TextFont() update.screen;: DrawString() ( $string -- )	>r trap: a884;: DrawText() ( addr firstbyte byteCount -- )	pass: 422 trap: a885;: TextWidth()  ( addr firstbyte byteCount -- length )	0 w>r	pass: 422  trap: a886 wr>;: GetPort()  ( var -- , load addr with pointer to GrafPort )	>r trap: a874;: CharWidth() ( char -- width )	0w>r w>r trap: a88d wr>;: GetFontInfo() ( fontinfoaddr -- )	pass: 4 trap: A88B;: PaintRect() ( rect -- )	>r trap: a8a2;: InvertRect() ( rect -- )	>r trap: a8a4;: ScrollRect() ( rect dh dv updateRgn -- )	pass: 4224	trap: a8ef;: ForeColor() ( color -- )	>r trap: a862;: BackColor() ( color -- )	>r trap: a863;: PenMode() ( mode -- )	w>r	trap: a89c;create GRAY_PATTERN $ 55AA55AA , $ 55AA55AA ,: PenPat()  ( pattern -- )    >r trap: a89d;: PenNormal()  ( -- )    trap: a89e;\ Event Manager: EventAvail()  ( eventmask event -- 0|1 )	0w>r swap w>r >r trap: a971 wr>;: GetNextEvent()  ( eventmask event -- 0|1 )	0w>r swap w>r >r trap: a970 wr>;: WaitNextEvent()  ( eventmask event sleep mouse -- 0|1 , for MultiFinder )	0w>r 	pass: 2444 trap: a860 wr>;: GetMouse() ( var-point -- )	>r trap: a972;: GetDblTime() ( -- time )	$ 2F0 @;\ Window Manager: CloseWindow() ( window -- )	>r trap: a92d;: DisposeWindow() ( window -- )	>r trap: a914;: ShowWindow() ( window -- )	>r trap: a915;: HideWindow() ( window -- )	>r trap: a916;: BringToFront() ( window -- )	>r trap: a920;: SendBehind() ( theWindow behindwindow-- )	swap >r >r trap: a921;: FindWindow()  ( point windowptr -- part )	0w>r	swap >r >r trap: a92c	wr>;: BeginUpdate()  ( window -- )	>r trap: a922;: EndUpdate()  ( window -- )	>r trap: a923;: SystemClick()  ( event window -- )	pass: 44 trap: a9b3;: DragWindow()  ( window startPt boundsrect -- )    pass: 444 trap: a925;: GrowWindow()  ( window startPt boundsrect -- result )    0>r pass: 444 trap: a92b r>;: SizeWindow()  ( window width height fupdate -- )	pass: 4222 trap: a91d;: FrontWIndow() ( window -- )	0>r trap: a924 r>;: SelectWindow() ( window -- )	>r trap: a91f;: TrackGoAway() ( theWindow thePt -- flag )	0w>r pass: 44	trap: a91e	wr>;\ Menu Manager: GetMHandle()  ( ID -- handle )	0>r w>r trap: A949   \ GetRMenu	r>;: GetMenu()  ( ID -- handle )	0>r w>r trap: A9BF   \ GetRMenu	r>;: MenuSelect() ( var-point -- packed-item )	0>r >r trap: a93d r>;: MenuKey()  ( char -- menu-item )	0>r w>r trap: a93e r>;: NewMenu() ( menuID menuTitle -- MenuHandle )	0>r	pass: 24 trap: a931 r>;: DisposeMenu() ( MenuHandle -- )	>r trap: a932;: AppendMenu()  ( MenuHandle $item -- )	pass: 44	trap: a933;: InsertMenu() ( MenuHandle beforeID -- )	pass: 42 trap: a935;: DeleteMenu() ( menuID -- )	w>r trap: a936;: DrawMenuBar() ( -- )	trap: a937;: CleanMenuBar()  ( -- )	trap: a934;: GetMenuBar() ( -- menuList )	0>r trap: a93b r>;: SetMenuBar() ( menuList-- )	>r trap: a93c;: HiliteMenu() ( menuID | 0 -- )	w>r trap: a938;: SetItem() ( menuHandle item itemString -- )	pass: 424  trap: a947;: SetItemMark() ( menuHandle item char -- )	pass: 422  trap: A944;: CheckItem() ( menuHandle item flag -- )	pass: 422  trap: a945;: DisableItem()  ( menuHandle item -- )	pass: 42 trap: a93a;: EnableItem()  ( menuHandle item -- )	pass: 42 trap: a939;\ Resource Manager: CountResources()  ( type -- n , how many of a given type )	0w>r >r trap: a99c wr>;: RmveResource() ( resHandle -- , remove from file )	>r trap: a9ad;: GetIndResource()  ( &type index -- handle )    0>r pass: 42 trap: a99d r>;: SizeResource() ( resHandle -- size )	0>r >r trap: a9a5 r>;: GetResource() ( type resID -- handle )	0>r pass: 42 trap: a9a0 r>;create ResInfoPad 0 , 0 , 0 ,: GetResInfo  ( handle -- &id &type &name )    >r ResInfoPad dup >r cell+ dup >r cell+ >r	trap: a9a8	ResInfoPad w@	ResInfoPad cell+ @	ResInfoPad cell+ cell+ @;$ 434F4445 constant 'CODE': KillResKernel  ( -- , remove kernel from resource fork )	'code' 4 GetResource()	dup SizeResource() 24000 < abort" Wrong Resource ID!"	RmveResource();\ Dialog Manager: GetNewDialog()  ( dialogID dstorage behind -- dlgptr)	0>r pass: 244	trap: a97c	r>;: NewDialog() ( &dstorage &boundsRect $title visible? procID &windowBehind .. )	( goAwayFlag refcon items -- dlgPtr )	0>r	pass: 444224244	trap: A97D	r>;: CLoseDialog() ( dlgptr -- )	>r trap: a982;: DisposeDialog() ( dlgptr -- )	>r trap: a983;: IsDialogEvent() ( theEvent -- flag )	0w>r  >r	trap: a97f	wr>;: DialogSelect() ( theEvent var-dialogPtr var-item-hit -- flag )	0w>r	pass: 444 trap: a980	wr>;: GetDItem() ( dialogPtr item# var-item-type var-item-handle var-box-rect -- )	pass: 42444	trap: a98d;: GetIText()  ( item-handle var-text -- )	pass: 44	trap: a990;: SetIText() ( item-handle $string -- )	pass: 44	trap: a98f;: SeLIText() ( the-dialog itemno strtsel endsel -- )	pass: 4222	trap: a97e;: ModalDialog()  ( filterProc var-item-hit -- )	pass: 44	trap: a991;: EraseRect() ( rect -- )	>r trap: a8a3;: DrawGrowIcon()  ( window -- )	>r trap: a904;: InvalRect() ( badrect -- , invalidate rectangle )	>r trap: A928;: SetWTitle() ( window $title -- )	pass: 44   trap: A91A;\ Control Manager: NewControl()  \  theWindow   boundsRect  title				\	visible   value  min  max				\   procID  refcon -- handle )	0>r	pass: 444222224	trap: a954	r>;: DrawControls()  ( window -- )	>r trap: a969;: ShowControl()  ( control -- )	>r trap: a957;: FindControl() ( Point  Window ControlVar -- part | NIL )	0w>r	pass: 444	trap: A96C	wr>;: TrackControl() ( ControlHandle StartPoint  actionProc -- part | NIL )	0w>r	pass: 444	trap: A968	wr>;: GetCtlMax() ( ControlHandle -- max )	0w>r >r trap: A962 wr>;: GetCtlValue() ( ControlHandle -- value )	0w>r >r trap: A960 wr>;: SetCtlMax() ( ControlHandle max -- )	pass: 42 trap: A965;: SetCtlValue() ( ControlHandle value -- )	pass: 42 trap: A963;\ TextEditor calls: TENew() ( destrect viewrect -- TEHandle )	0>r	pass: 44 trap: A9D2	r>;: TEDispose()  ( TEHandle -- )	>r trap: A9CD;: TEKey() ( char TEHandle -- )	pass: 24	trap: A9DC;: TEUpdate() ( rUpdate TEHandle -- )	pass: 44 trap: A9D3;: TEGetText() ( TEHandle -- CharsHandle )	0>r >r	trap: A9CB	r>;: TESetSelect() ( start end TEHandle -- )	pass: 444	trap: A9D1;: TEInsert() ( addr count TEHandle -- )	pass: 444	trap: A9DE;: TESetText() ( addr count TEHandle -- )	pass: 444	trap: A9CF;: TEActivate() ( TEHandle -- )	>r trap: A9D8;: TEDeactivate() ( TEHandle -- )	>r trap: A9D9;: TEClick()  ( point extend TEHandle -- )	pass: 424	trap: A9D4;: TECut() ( TEHandle -- )	>r trap: A9D6;: TECopy() ( TEHandle -- )	>r trap: A9D5;: TEPaste() ( TEHandle -- )	>r trap: A9DB;: TEDelete() ( TEHandle -- )	>r trap: A9D7;\ New 6.0 Calls: TEAutoView() ( boolean TEHandle -- )	pass: 24 trap: A813;\ Misc: GettrapAddress() ( trap:# -- addr )    d0! trap: A146 a0@;