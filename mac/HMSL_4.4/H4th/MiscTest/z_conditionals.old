\ Old FIG style conditionals.1 constant begin_flag2 constant if_flag: IF  ( flag -- ) ( -:- addr marker )    ?comp	compile 0branch	here 0 w,	if_flag; IMMEDIATE: THEN  ( -- ) ( addr marker -:- )    ?comp if_flag ?pairs	here over -  ( calc offset )	swap w!; IMMEDIATE: ELSE  ( -- ) ( addr marker -:- addr' marker )    if_flag ?pairs	compile branch	here 0 w,	swap if_flag	[compile] then    ( resolve first branch )	if_flag; IMMEDIATE: BACK  ( addr -- , resolve backwards branch )    ?comp here - w,;: BEGIN ( -- ) ( -:- addr marker )    ?comp here	begin_flag; IMMEDIATE: UNTIL  ( -- ) ( addr marker -:- )    ?comp begin_flag ?pairs	compile 0branch	back; IMMEDIATE: AGAIN  ( -- ) ( addr marker -:- )    ?comp begin_flag ?pairs	compile branch	back; IMMEDIATE: WHILE ( flag -- ) ( addr marker -:- addrb makkerb addrif markerif)    ?comp dup begin_flag ?pairs	[compile] if; IMMEDIATE: REPEAT ( -- ) ( addrb markerb addrif markerif -:- )    >r >r	[compile] again	r> r> [compile] then; IMMEDIATE: BACK  ( addr -- , resolve backwards branch )    ?comp here - w,;