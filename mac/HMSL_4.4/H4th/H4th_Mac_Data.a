* Macintosh Specific Code for HMSL Forth*********************************************************************** HMSL Forth System                                                 ** Author: Phil Burk                                                 ** Copyright 1989 Phil Burk , All Rights Reserved                    ***********************************************************************appleID 		EQU 			128 		Resource IDs/menu IDs for Apple,fileID			EQU 			129 			File, and Edit menuseditID			EQU 			130IncludeID		EQU 			131windMenuID		EQU 			132menuCount		EQU 			5			Total number of menuswindowID		EQU 			128 		Resource ID for application'w windowincludeCommand		EQU				1			Menu Item numbers for Include menuReIncludeCommand	EQU				2IncEditCommand		EQU				3IncClipCommand		EQU				4openCommand		EQU				2			in File MenuquitCommand		EQU				12			in File MenuaboutMeDLOG 	EQU 			128 		Resource ID for the "about" dialogEOL_CHAR		EQU				$0DTAB_CHAR		EQU				$09* To illustrate how the template type feature works the following templates are* declared and used instead of the simple offsets defined in the equate files.* By using these, the Assember source appromixates very closely the Pascal* source for referencing the corresponding information.  Perhaps someday we will* have a set of "equate" files that define types just like Pascal USES units do!Point			RECORD			0			Point = RECORD CASE INTEGER OFv				DS.W			1					  1: (v: INTEGER;h				DS.W			1						  h: INTEGER);				ORG 			v					  2: (vh: ARRAY[1..2]vh				DS.W			h								 OF INTEGER)				ENDR								END;Rect			RECORD			0			Rect  = RECORD CASE INTEGER OFtop 			DS.W			1					  1: (top:	  INTEGER;left			DS.W			1						  left:   INTEGER;bottom			DS.W			1						  bottom: INTEGER;right			DS.W			1						  right:  INTEGER);				ORG 			toptopLeft 		DS.L			Point				  2:  (topLeft:  Point;botRight		DS.L			Point				  3:  (botRight: Point)				ENDR								END;BitMap			RECORD			0			BitMap = RECORDbaseAddr		DS.L			1					  baseAddr: QDPtr;rowBytes		DS.W			1					  rowBytes: INTEGER;bounds			DS.L			Rect				  bounds:	 Rect				ENDR								END;EventRecord 	RECORD			0			EventRecord = RECORDwhat			DS.W			1					  what:    INTEGER;message 		DS.L			1					  message:	 LONGINT;when			DS.L			1					  when:    LONGINT;where			DS.L			Point				  where:	   Point;modifiers		DS.W			1					  modifiers: INTEGER				ENDR								END;				EJECT************************ QuickDraw's Globals ************************* The following data module is used to define the QuickDraw global data area.*				-----------QuickDraw		RECORD			,DECREMENTthePort 		DS.L			1white			DS.B			8black			DS.B			8gray			DS.B			8ltGray			DS.B			8dkGray			DS.B			8arrow			DS.B			cursRecscreenBits		DS.B			BitMaprandSeed		DS.L			1				ORG 			-grafSize				ENDR* Finder File InfoFInfo			RECORD		0fdType			DS.L		1fdCreator		DS.L		1fdFlags			DS.W		1fdLocation		DS.B		POINTfdFldr			DS.W		1				ENDR				* Define Records for Mac ToolboxParamBlockRec	RECORD		0qLink			DS.L		1qType			DS.W		1ioTrap			DS.W		1ioCmdAddr		DS.L		1ioCompletion	DS.L		1ioResult		DS.W		1ioNamePtr		DS.L		1ioVRefNum		DS.W		1* ioParam:ioRefNum		DS.W		1ioVersNum		DS.B		1ioPermssn		DS.B		1ioMisc			DS.L		1ioBuffer		DS.L		1ioReqCount		DS.L		1ioActCount		DS.L		1ioPosMode		DS.W		1ioPosOffset		DS.L		1* WDPBRec:				ORG			ioRefNumfiller11		DS.W		1ioWDIndex		DS.W		1ioWDProcID		DS.L		1ioWDVRefNum		DS.W		1filler2			DS.W		7ioWDDirID		DS.L		1* fileParam:				ORG			ioRefNumioFRefNum		DS.W		1ioFVersNum		DS.B		1filler1			DS.B		1ioFDirIndex		DS.W		1ioFlAttrib		DS.B		1ioFlVersNum		DS.B		1ioFlFndrInfo	DS.B		FInfoioFlNum			DS.L		1ioFlStBlk		DS.W		1ioFlLgLen		DS.L		1ioFlPyLen		DS.L		1ioFlRStBlk		DS.W		1ioFlRLgLen		DS.L		1ioFlRPyLen		DS.L		1ioFlCrDat		DS.L		1ioFlMdDat		DS.L		1				ENDRSFReply			RECORD		0sfGood			DS.B		1sfCopy			DS.B		1sfType			DS.L		1sfvRefNum		DS.W		1sfVersion		DS.W		1sfName			DS.B		64				ENDR				*************************** HMSL Specific Records  ***************************WindowTracker	RECORD		0wtEVHandler		DS.L		1		event handler functionwtMDHandler		DS.L		1		mousedown handler functionwtWindowPtr		DS.L		1		pointer to Mac Window structure				ENDR				*************************** Global Data for HMSL   ***************************NumEventHandlers 		EQU		16NumWindowHandlers		EQU		 9NumMenuHandlers			EQU		16GlobalData		RECORDappleMenuH		DS.L			1				Handle to the Apple menufileMenuH		DS.L			1				Handle to the File menueditMenuH		DS.L			1				Handle to the Edit menuinclMenuH		DS.L			1				Handle to the Include menuwindMenuH		DS.L			1				Handle to the Window menuloadStatus		DS.L			1				status return from Load Dictionary operationdragRect		DS.L			Rect			Drag limitsgrowRect		DS.L			Rect			Grow limitsScratchRect		DS.W			Rect			general purpose rectangledoneFlag		DS.B			1				True if Quit command processedmyEvent 		DS.L			EventRecord 	Current event infowRecord 		DS.B			windowSize		The application window recordmyWindow		DS.L			1				Ptr to the H4th windowwhichWindow 	DS.L			1				Current event's windowwhichPart		DS.L			1				Returned from FindWindowcurWindowTr		DS.L			1				point to currently active Window TrackermyWindowTr		DS.L		WindowTracker		Handlers for H4th windowmousePt 		DS.L			Point			Used to get current mouse pointmyFile			DS.L		ParamBlockRec		File Parameter Block for file I/OmySFReply		DS.L		SFReply				Used with SFGetFileEventHandlers	DS.L		NumEventHandlers	Jump Table for EventsWindowHandlers	DS.L		NumWindowHandlers	Jump Table for Window EventsMenuHandlers	DS.L		NumMenuHandlers		Jump Table for Menu IDsNegativeOne		DS.L			1				Used for passing pointer to -1				ENDR