\ TRACKER\\ Play the last 16 notes received from a MIDI keyboard\ in a repeating pattern.  Use a circular buffer\ to hold the notes.\\ Author: Phil Burk\ Copyright 1986\ All Rights Reserved\\ MOD: PLB 6/4/87 Use MIDI.PARSER.ON\ MOD: PLB 4/10/89 Add duration tracking.ANEW TASK-TRACKERVARIABLE MT-SHAPE-MAXVARIABLE MT-NOTE-DURVARIABLE MT-NEXT-INDEXVARIABLE MT-LAST-TIME16 mt-shape-max !8 mt-note-dur !: SUM.DURS ( -- total )	0 many: shape-1 0	DO i 0 ed.at: shape-1 +	LOOP	mt-next-index @ 0 ed.at: shape-1 -  ( don't use current cuz it will get overwritten );: CALC.FILLER.DURATION ( -- dur , duration that will keep on beat, fill to measure )	mt-note-dur @ 4*	sum.durs mt-note-dur @   mod -;\ This word gets called when a note on is recieved.: MT.NOTE.ON ( note velocity -- , bounce note )	2dup midi.noteon	?dup  ( velocity > 0 means real ON )	IF  ( -- n v )		many: shape-1 max.elements: shape-1  >=		IF\ Update duration of previous note.			time@ dup mt-last-time @ -  24 min			swap mt-last-time !			mt-next-index @ 0			ed.to: shape-1\\ Put in next position in shape.			mt-next-index @ 1+ many: shape-1 mod 0 max mt-next-index !			calc.filler.duration -rot  ( -- dur n v )			mt-next-index @  put: shape-1		ELSE			mt-note-dur @ -rot add: shape-1			time@ mt-last-time !		THEN	ELSE drop	THEN;: MT.BUILD.PLAYER ( -- , Setup player with shape. )	mt-shape-max @ 3 new: shape-1	mt-note-dur @ 0 0 add: shape-1 ( start with a rest )\	0 shape-1 0stuff: player-1	4000 put.repeat: player-1\	0 put.gamut: ins-midi-1	0 put.offset: ins-midi-1	ins-midi-1 put.instrument: player-1;: MT.INIT  ( -- , Initialize Piece )	mt.build.player	0 mt-next-index !\\ Set parser vector so that whenever a NOTE ON is recieved\ the word MT.NOTE.ON will be called.  This will occur\ when MIDI.PARSE is polled (called).	mp.reset	'c mt.note.on  mp-on-vector !	'c midi.preset   mp-program-vector !\\ Make shapes available.	clear: shape-holder	shape-1 add: shape-holder;: MT.PLAY ( -- )	midi.clear	midi.parser.on	player-1 hmsl.play  ( no preposted morphs )	midi.parser.off;: MT.TERM ( -- , Clean up for others. )	default.hierarchy: player-1	free.hierarchy: player-1	mp.reset       ( reset midi parser vectors );: TRACKER ( -- )	mt.init  mt.play  mt.term;cr ." Enter:   TRACKER  to play this piece." cr." Play notes on MIDI keyboard." cr