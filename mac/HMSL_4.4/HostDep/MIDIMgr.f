\ MIDI Manager Access from H4th\ Data Structures and Calls\\ MOD: PLB 1/31/90 Changed MP_LENGTH to UBYTE to fix lengths > 127ANEW TASK-MIDIMgr.fdecimal:STRUCT MIDIPacket	ubyte   mp_flags	ubyte   mp_length	long    mp_tStamp	250 bytes   mp_data    ( could be 0-248 bytes )\ Add some of our own fields for handling the byte buffers.	aptr	mp_next_byte;STRUCT:STRUCT MIDIClkInfo	short  mci_sync       \ internal or external 	long   mci_curTime    \ current value of port's clock	short  mci_format    \ time code format;STRUCT:STRUCT MIDIIDList	short  mil_numIDs	100 4 * bytes   mil_list;STRUCT:STRUCT MIDIPortParams	long   mpp_PortID      \ unique within client	short  mpp_PortType	short  mpp_timeBase    \ refnum of time base or 0	long   mpp_OffsetTime  \ offset for time stamps	aptr   mpp_ReadHook    \ call if <> 0	long   mpp_refCon      \ client use	struct MIDIClkInfo mpp_initClock	256 bytes mpp_Name;STRUCT0 constant MIDINoReadPacket1 constant MIDIMorePacket2 constant MIDINoMorePacket0 constant MIDIPortTypeTime1 constant MIDIPortTypeInput2 constant MIDIPortTypeOutput3 constant MIDIPortTypeTimeInv$ 7FFFFFFF constant midiGetEverything$ 80000000 constant midiGetNothing$ 00000000 constant midiGetCurrent\ These values are correct but may change in the future!!$ 80 constant midiTimeStampCurrent$ 00 constant midiTimeStampValid$ 00 constant midiNoCont$ 01 constant midiStartCont$ 03 constant midiMidCont$ 02 constant midiEndCont0 constant MIDIInternalSync1 constant MIDIExternalSync0 constant midiFormatMSec		\ milliseconds1 constant midiFormatBeats		\ beats2 constant midiFormat24fpsBit	\ 24 frames/sec.3 constant midiFormat25fpsBit	\ 25 frames/sec.4 constant midiFormat30fpsDBit	\ 30 frames/sec. drop-frame5 constant midiFormat30fpsBit	\ 30 frames/sec.6 constant midiFormat24fpsQF	\ 24 frames/sec. longInt format7 constant midiFormat25fpsQF	\ 25 frames/sec. longInt format8 constant midiFormat30fpsDQF	\ 30 frames/sec. drop-frame longInt format9 constant midiFormat30fpsQF	\ 30 frames/sec. longInt format\ Numbers used to build calls to MIDI Managerfalse .IF	midiVersion			EQU		0	midiSignIn			EQU		4	midiSignOut			EQU		8	midiGetClients		EQU		12	midiGetClientName	EQU		16	midiSetClientName	EQU		20	midiGetPorts		EQU		24	midiAddPort			EQU		28	midiGetPortInfo		EQU		32	midiConnectData		EQU		36	midiUnConnectData	EQU		40	midiConnectTime		EQU		44	midiUnConnectTime	EQU		48	midiFlush			EQU		52	midiGetReadHook		EQU		56	midiSetReadHook		EQU		60	midiGetPortName		EQU		64	midiSetPortName		EQU		68	midiWakeUp			EQU		72	midiRemovePort		EQU		76	midiGetSync			EQU		80	midiSetSync			EQU		84	midiGetCurTime		EQU		88	midiSetCurTime		EQU		92	midiStartTime		EQU		96	midiStopTime		EQU		100	midiPoll			EQU		104	midiWritePacket		EQU		108	midiWorldChanged	EQU		112	midiGetOffsetTime	EQU		116	midiSetOffsetTime	EQU		120	midiConvertTime		EQU		124	midiGetRefCon		EQU		128	midiSetRefCon		EQU		132	midiGetClRefCon		EQU		136	midiSetClRefCon		EQU		140	midiGetTCFormat		EQU		144	midiSetTCFormat		EQU		148	midiSetRunRate		EQU		152	midiGetClientIcon	EQU		156.THEN\ Calls4 constant MIDIToolNum: CALLMIDI  ( <number> -- , compile trap number with # in D0 )	?comp	base @ decimal	bl word number?	IF drop  $ 203C w,    16 shift midiToolNum + ,   \ MOVE.L  #xx,D0	         $ A800 w,     \ TRAP	ELSE ." CALLMIDI - Not a valid number!" abort	THEN	base !; immediatedecimal: MIDISignIn()  ( client refcon icon name -- error )	0w>r pass: 4444	callMIDI 4	wr>;: MIDISignOut() ( clientID -- )	>r callMIDI 8;: MIDIAddPort()  ( client bufsize &refnum &MIDIPortParams -- error )	0w>r pass: 4244	callMIDI 28	wr>;: MIDIRemovePort() ( refnum -- )	w>r callMIDI 76;: MIDIWritePacket() ( refnum &packet -- error )    0w>r pass: 24 callMIDI 108 wr>;: MIDIPoll() ( refnum offsetTime -- )    pass: 24 callMIDI 104;: MIDIGetClientIcon()  ( clientID -- icon  )	0>r >r callMIDI 156 r>;: MIDIGetCLients()  ( -- ListHdl )	0>r callMIDI 12 r>;: MIDIGetCLientName()  ( clientID varName -- )	pass: 44 callMIDI 16;: MIDIGetPorts() ( clientID -- handle )	0>r >r callMIDI 24 r>;: MIDIConnectData() ( sourceClient srcPort destClient destport -- error )	0w>r pass: 4444	callMIDI 36	wr>;: MIDIUnConnectData() ( sourceClient srcPort destClient destport -- error )	0w>r pass: 4444	callMIDI 40	wr>;\ Time related calls.: MIDIConnectTime() ( sourceClient srcPort destClient destport -- error )	0w>r pass: 4444	callMIDI 44	wr>;: MIDIUnConnectTime() ( sourceClient srcPort destClient destport -- error )	0w>r pass: 4444	callMIDI 48	wr>;: MIDIGetSync() ( refnum -- sync )    0w>r w>r callMIDI 80 wr>;: MIDISetSync() ( refnum sync -- )    pass: 22 callMIDI 84;: MIDIGetOffsetTime() ( refnum -- time )    0>r w>r callMIDI 116 r>;: MIDISetOffsetTime() ( refnum time -- )    pass: 24 callMIDI 120;: MIDIGetRefCon() ( refnum -- refcon )    0>r w>r callMIDI 128 r>;: MIDISetRefCon() ( refnum refcon -- )    pass: 24 callMIDI 132;: MIDISetReadHook() ( refnum newhook -- )    pass: 24 callMIDI 60;: MIDIConvertTime() ( srcFormat dstFormat time -- time' )    0>r pass: 224	callMIDI 124	r>;: MIDIGetTCFormat() ( refnum -- format )    0w>r w>r callMIDI 144 wr>;: MIDISetTCFormat() ( refnum format -- )	pass: 22 callMIDI 148;	: MIDIGetCurTime() ( refnum -- time )    0>r w>r callMIDI 88 r>;: MIDISetCurTime() ( refnum time -- )    pass: 24 callMIDI 92;: MIDIStartTime() ( refnum -- )    w>r callMIDI 96;: MIDIStopTime() ( refnum -- )    w>r callMIDI 100;: MIDISetRunRate() ( refnum rate stoptime -- time )    pass: 224 callMIDI 152;