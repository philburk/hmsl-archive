\ Build menus for HMSL for Macintosh running H4th\\ Author: Phil Burk\ Copyright 1986 -  Phil Burk, Larry Polansky, David Rosenboom.\ All Rights Reserved\\ MOD: PLB 2/26/90 Moved CUSTOM-SCREENS object to H:SCREEN.ANEW TASK-H4TH_BUILD_MENUSvariable IF-HMSL-MENUSdefer HMSL.RESET: MAIN.QUIT  ( - )	quit-hmsl on;133 constant HMSL_MENU_ID134	constant CUSTOM_MENU_IDvariable hmsl-menu-ptrvariable custom-menu-ptr: MENUS.MAKE.SCR  ( -- , set text based on custom screen titles )	custom_menu_id " Screens" NewMenu() custom-menu-ptr !    many: custom-screens 0    DO  custom-menu-ptr @		i get: custom-screens get.title: []\ append   "/key"  for menu hot keys		pad $move		pad ascii / $append.char		pad i get: custom-screens get.key: []  $append.char		pad AppendMenu()    LOOP;: MENUS.MAKE.HMSL  ( -- , create menus on the fly )	hmsl_menu_id " HMSL" NewMenu() dup hmsl-menu-ptr !	" Reset;Stop/Q"		AppendMenu();: MENUS.DISPOSE ( -- , get rid of them )	hmsl-menu-ptr @ ?dup	IF 	DisposeMenu() hmsl-menu-ptr off	THEN	custom-menu-ptr @ ?dup	IF DisposeMenu() custom-menu-ptr off	THEN;: MENUS.DRAW ( -- )	if-hmsl-menus @ 0=    IF	menus.make.scr    	menus.make.hmsl		hmsl-menu-ptr @ 0 InsertMenu()		custom-menu-ptr @ 0 InsertMenu()		DrawMenuBar()		'c ev.menupick hmsl_menu_id ev.menu.func!		'c ev.menupick custom_menu_id ev.menu.func!		if-hmsl-menus on	THEN;: MENUS.UNDRAW  ( -- )	if-hmsl-menus @    IF	hmsl_menu_id DeleteMenu()		custom_menu_id DeleteMenu()		DrawMenuBar()		menus.dispose		if-hmsl-menus off	THEN;: MENUS.INIT ( -- , Build Master Menu)    " MENUS.INIT" debug.type	'c menus.draw is draw.hmsl.menus	'c menus.undraw is undraw.hmsl.menus;: MENUS.TERM  ( -- )	'c noop is draw.hmsl.menus	'c noop is undraw.hmsl.menus;\ This word must be supported on different hosts.: PROCESS.MAIN.MENU  ( item -- )    CASE       1 OF hmsl.reset   ENDOF       2 OF main.quit    ENDOF       notyet    ENDCASE;: PROCESS.CUSTOM.MENU  ( item -- )	1-     dup many: custom-screens <    IF  cg-current-screen @ ?dup        IF undraw: []        THEN        get: custom-screens draw: []    ELSE drop    THEN;: PROCESS.MENUS ( -- )    ev.get.menuitem  swap hmsl_menu_id =	IF process.main.menu	ELSE process.custom.menu	THEN;: SYS.INIT sys.init menus.init ;: SYS.TERM menus.term sys.term ;