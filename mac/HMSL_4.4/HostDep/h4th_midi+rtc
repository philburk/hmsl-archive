\ Use the MIDI manager for HMSLs MIDI and interface and Real Time Clock.\\ To get around the limitations of the Apple MIDI Driver,\ we have added another layer of ports.\ Unbuffered:\	OutPort --> Apple\ Buffered:\	OutPort --> BufPort --> AuxOut --> Apple\\ Author: Phil Burk\ Copyright 1989 Phil Burk, Larry Polansky, David Rosenboom\\ MOD: PLB 11/26/90 Use MIDIM-USE-AUX in MIDIM.REMPORTS, separate MIDIM.CONNECTsANEW TASK-H4th_MIDI+RTCvariable MIDIM-USE-AUX   \ use auxillary port for bufferingfalse MIDIM-USE-AUX !: OSTYPE: ( string <name> -- , define an OStype value for Mac )	CREATE  1+ here 4 cmove 4 allot	DOES> @;\ HMSL Port names" HMai" OSTYPE: 'HMAI'  \ input ports" HMbi" OSTYPE: 'HMBI'" HMab" OSTYPE: 'HMAB'  \ buffer ports" HMbb" OSTYPE: 'HMBB'" HMax" OSTYPE: 'HMAX'  \ auXillary ports" HMbx" OSTYPE: 'HMBX'" HMao" OSTYPE: 'HMAO'  \ output ports" HMbo" OSTYPE: 'HMBO'" HMTI" OSTYPE: 'HMTI'  \ just one timer" ICN#" OSTYPE: 'ICN#'" HMSL" OSTYPE: 'HMSL''HMSL' value midim_client    \ change this for turnkeyed applications\ Apple MIDI Driver" amdr" ostype: 'amdr'" ATim" ostype: 'ATim'" BTim" ostype: 'BTim'" Ain " ostype: 'Ain'" Aout" ostype: 'Aout'" Bin " ostype: 'Bin'" Bout" ostype: 'Bout'variable MIDIM-IF-ON: MIDIM.SIGNIN  ( -- , sign HMSL into MIDI Manager )	midim_client  0	'ICN#' 1 GetIndResource()  ( get icon for patcher )	" HMSL"	MIDISignIn() ?dup	IF . ." MIDIM.SIGNIN failed!" abort	THEN;: MIDIM.SIGNOUT  ( -- )	midim_client MIDISignOut();\ These arrays hold the reference numbers for the open MIDI ports.\ They can be assigned to different physical output ports via the Patchbay.\ The ports are stored as a 16 bit refnum so use W@ and W!2 array MIDIM-OutPorts0 midim-outports off 1 midim-outports off2 array MIDIM-InPorts0 midim-INports off 1 midim-INports off2 array MIDIM-AuxPorts0 midim-AUXports off 1 midim-AUXports off2 array MIDIM-BufPorts0 midim-BUFports off 1 midim-BUFports offvariable MIDIM-TimePort: MIDIM.TIMER.REFNUM ( -- refnum )	midim-timeport w@;: MIDIM.OUTPORT.REFNUM ( -- refnum )	midi-port @	 midim-outports w@;\ Structure for adding portsMIDIPortParams MyPortParams: MIDIM.ADD.Output  ( portID name varref -- )	>r \ save varref\ Setup port params structure.	MyPortParams .. mpp_name $move  \ set name for patcher	MyPortParams ..! mpp_portID\	midiPortTypeOutput MyPortParams ..! mpp_portType\ Use our timeport.	midim.timer.refnum MyPortParams ..! mpp_timeBase\ No time offset for now.	0 MyPortParams ..! mpp_offsetTime	0 MyPortParams ..! mpp_readHook	0 MyPortParams ..! mpp_refCon\\ Make call to ADD port	midim_client		\ Add to HMSLs application signin.	0    ( bufsize )	r>	MyPortParams  MIDIAddPort() ?dup	IF ." MIDIM.ADD.OutPort - Couldn't!" . cr abort	THEN;: MIDIM.ADD.OutPORT  ( portid port# name -- , %Q messy)	swap midim-outports midim.add.output;: MIDIM.ADD.AuxPORT  ( portid port# name -- , %Q messy)	swap midim-AuxPorts midim.add.output;\ Input Ports -----------------------------------\ Define separate packet for each port.MIDIPacket MIDIM-InPacket-0MIDIPacket MIDIM-InPacket-1: MIDIM-INPACKETS   ( packet# -- addr , return address of proper packet )	IF	MIDIM-InPacket-1	ELSE	MIDIM-InPacket-0	THEN;: MIDIM.ADD.InPORT  { portID port# name -- }	MyPortParams >r	portid r@ ..! mpp_portID	midiPortTypeInput r@ ..! mpp_portType\ Use our timebase	midim.timer.refnum r@ ..! mpp_timeBase\\ Don't get packets until polled	midiGetNothing r@ ..! mpp_offsetTime\\ Use the ReadHook defined in the kernel.\ It copies the packet the address given in the RefCon which\ is our copy of the incoming MIDI Packet	'c MIDIReadHook r@ ..! mpp_readHook	port# midim-inpackets	r@ ..! mpp_refCon\	name r@ .. mpp_name $move	rdrop\	midim_client	MIDI-RECV-SIZE @    ( bufsize )	port# midim-inports	MyPortParams  MIDIAddPort() ?dup	IF ." MIDIM.ADD.INPORT - Couldn't!" . cr abort	THEN;\ Buffer Ports -----------------------------------\ Define separate packet for each port.MIDIPacket MIDIM-BufPacket-0MIDIPacket MIDIM-BufPacket-1: MIDIM-BufPACKETS   ( packet# -- addr , return address of proper packet )	IF	MIDIM-BufPacket-1	ELSE	MIDIM-BufPacket-0	THEN;: MIDIM.ADD.BufPORT  { portID port# name -- }	MyPortParams >r	portid r@ ..! mpp_portID	midiPortTypeInput r@ ..! mpp_portType\ Use our timebase	midim.timer.refnum r@ ..! mpp_timeBase\\ respond immediately to packets !!!!!!!	0 r@ ..! mpp_offsetTime\\ Use a ReadHook defined in the kernel.\ It writes the packet immediately to the refnum given as a refcon	'c MIDIEchoHook r@ ..! mpp_readHook	port# midim-AuxPorts w@    r@ ..! mpp_refCon\	name r@ .. mpp_name $move	rdrop\	midim_client	MIDI-XMIT-SIZE @    ( bufsize )	port# MIDIM-BUFPORTS	MyPortParams  MIDIAddPort() ?dup	IF ." MIDIM.ADD.BufPORT - Couldn't!" . cr abort	THEN;\ ------------------------------------------------------------\ This timer port is driven by the HMSL Timer1 Interrupt\ or by the Apple MIDI Driver: MIDIM.ADD.TimePORT  ( -- , add our one timer port )	MyPortParams	'HMTI' over ..! mpp_portID	midiPortTypeTime over ..! mpp_portType	0 over ..! mpp_timeBase	0 over ..! mpp_offsetTime	0 over ..! mpp_readHook	0 over ..! mpp_refCon\	rtc-use-midi @	IF midiExternalSync\ Sync to internal clock instead of MIDI Time Code or whatever.	ELSE midiInternalSync	THEN over .. mpp_InitClock ..! mci_sync	0 over .. mpp_InitClock ..! mci_curTime	midiFormatMsec over .. mpp_InitClock ..! mci_format\	" HMSL Time" over .. mpp_name $move	drop\	midim_client	0    ( bufsize )	midim-TimePort	MyPortParams  MIDIAddPort() ?dup	IF ." MIDIM.ADD.TimePORT - Couldn't!" . cr abort	THEN;\ ----------------------------------------------------: MIDIM.ADD.PORTS  ( -- , add all ports )	midim.timer.refnum 0=	IF	midim.add.timeport		'HMAI' 0 " Input-0"  midim.add.inport		'HMAO' 0 " Output-0" midim.add.outport		'HMBI' 1 " Input-1"  midim.add.inport		'HMBO' 1 " Output-1" midim.add.outport		MIDIM-USE-AUX @		IF	\ MUST do AuxPorts before BufPorts			'HMAX' 0 " Aux-0" midim.add.AuxPort			'HMBX' 1 " Aux-1" midim.add.AuxPort			'HMAB' 0 " Buffer-0" midim.add.BufPort			'HMBB' 1 " Buffer-1" midim.add.BufPort		THEN			THEN;: MIDIM.REMPORT  ( var-port -- , check, remove, clear )	dup w@ ?dup	IF	MIDIRemoveport()	THEN	0 swap w!;: MIDIM.REMPORTS ( -- )	0 midim-OUTports midim.remport	1 midim-outports midim.remport	0 midim-INports midim.remport	1 midim-inports midim.remport	midim-use-aux @	IF	0 midim-AUXports midim.remport		1 midim-Auxports midim.remport		0 midim-BUFports midim.remport		1 midim-BUFports midim.remport	THEN	midim-timeport midim.remport;variable MIDIM-TIME-EXT?variable MIDIM-TIME-CONNECTED: MIDIM.UNCONNECT.TIME ( -- )	midim-time-connected @	IF	midim-time-ext? @		IF   \ HMSL clock from Apple MIDI Driver			'amdr' 'ATim' midim_client 'hmti' MidiUnCOnnectTime() drop			'amdr' 'BTim' midim_client 'hmti' MidiUnCOnnectTime() drop		ELSE \ Apple Timer from HMSL			midim_client 'hmti' 'amdr' 'ATim' MidiUnCOnnectTime() drop			midim_client 'hmti' 'amdr' 'BTim' MidiUnCOnnectTime() drop		THEN	THEN	midim-time-connected off;: MIDIM.CONNECT.TIME ( -- )	midim.unconnect.time    rtc-use-midi @	IF   \ Drive HMSL clock from Apple MIDI Driver		'amdr' 'ATim' midim_client 'hmti' MidiCOnnectTime() drop		midim-time-ext? on	ELSE \ Drive Apple Timer from HMSL		midim_client 'hmti' 'amdr' 'ATim' MidiCOnnectTime() drop		midim_client 'hmti' 'amdr' 'BTim' MidiCOnnectTime() drop		midim-time-ext? off	THEN	midim-time-connected on;: MIDIM.CONNECT.AUX  ( -- , connect through auxillary ports )	midim_client 'HMAO' midim_client 'HMAB' MidiCOnnectData() drop	midim_client 'HMAX' 'amdr' 'Aout' MidiCOnnectData() drop	midim_client 'HMBO' midim_client 'HMBB' MidiCOnnectData() drop	midim_client 'HMBX' 'amdr' 'Bout' MidiCOnnectData() drop;: MIDIM.CONNECT.OUT ( -- , connect directly )	midim_client 'HMAO' 'amdr' 'Aout' MidiCOnnectData() drop	midim_client 'HMBO' 'amdr' 'Bout' MidiCOnnectData() drop;: MIDIM.CONNECT.PORTS ( -- , connect up ports to defaults )	midim.connect.time	midim_client 'HMAI' 'amdr' 'Ain'  MidiCOnnectData() drop	midim_client 'HMBI' 'amdr' 'Bin'  MidiCOnnectData() drop			MIDIM-USE-AUX @	IF  midim.connect.aux	ELSE midim.connect.out	THEN;: MIDIM.UnCONNECT.PORTS ( -- , connect up ports to defaults )	midim.unconnect.time	midim_client 'HMAI' 'amdr' 'Ain'  MidiUnConnectData() drop	midim_client 'HMBI' 'amdr' 'Bin'  MidiUnConnectData() drop			MIDIM-USE-AUX @	IF		midim_client 'HMAO' midim_client 'HMAB' MidiUnCOnnectData() drop		midim_client 'HMAX' 'amdr' 'Aout' MidiUnCOnnectData() drop		midim_client 'HMBO' midim_client 'HMBB' MidiUnCOnnectData() drop		midim_client 'HMBX' 'amdr' 'Bout' MidiUnCOnnectData() drop			ELSE		midim_client 'HMAO' 'amdr' 'Aout' MidiUnCOnnectData() drop		midim_client 'HMBO' 'amdr' 'Bout' MidiUnCOnnectData() drop	THEN	;\ -------------------------------------------------\ MIDI Timer Clock Support: MIDIM.TIME.START  ( -- )    midim.timer.refnum MIDIStartTime();: MIDIM.TIME@  ( -- time )	midim.timer.refnum MIDIGetCurTime();: MIDIM.TIME!  ( time -- )	midim.timer.refnum ?dup	IF	swap MIDISetCurTime()	ELSE	drop	THEN;: MIDIM.TIME+!  ( n -- )    midim.time@ + midim.time!;: MIDIM.TIME.STOP  ( -- )    midim.timer.refnum MIDIStopTime();: MIDIM.RATE!  ( ticks/second -- )    drop ." Sorry - MIDI Manager Timer can't RTC.RATE!";: MIDIM.RATE@  ( -- 1000 )	1000;: MIDIM.TIME.INIT  ( -- , start external timing )	midim.timer.refnum ?dup	IF	midiExternalSync MIDISetSync()		midim.connect.time	THEN;	: MIDIM.TIME.TERM  ( -- , start internal timing )	midim.timer.refnum ?dup	IF	midiInternalSync MIDISetSync()		midim.unconnect.time	THEN;: RTC.USE.MIDIM  ( -- , Use MIDI manager for Time )	rtc.term	'c midim.time.start is RTC.START ( -- )	'c midim.time.stop is RTC.STOP ( -- )	'c midim.rate! is RTC.RATE! ( ticks/second -- )	'c midim.rate@ is RTC.RATE@ ( -- ticks/second )	'c midim.time! is RTC.TIME! ( time -- )	'c midim.time+! is RTC.TIME+! ( time -- )	'c midim.time@ is RTC.TIME@ ( -- time )	'c midim.time.init is RTC.INIT  ( -- )	'c midim.time.term is RTC.TERM ( -- )	rtc-use-midi on;: USE.MIDI.TIMING	rtc.use.midim rtc.init;\ ------------------------------------------------------------: MIDIM.PORTS.INIT  ( -- , Initialize ports for MIDI )    midim-if-on @ 0=	IF    	MIDIToolNum SndDispVersion()		IF	." Apple MIDI Manager Initialized!" cr			midim.signin			midim.add.ports			midim-if-on on			midim.connect.ports		ELSE ." MIDI Manager not installed!!!!" cr			." You must put Apple MIDI DRiver and MIDI Manager" cr			." in System folder and reboot.  See HMSL Installation Guide." cr		THEN	THEN;: MIDIM.PORTS.TERM  ( -- , Close MIDI communications channel )	midim-if-on @	IF	midim.UNconnect.ports		midim.remports		midim.signout		midim-if-on off	THEN;