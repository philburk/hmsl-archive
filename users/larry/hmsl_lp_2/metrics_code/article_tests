\ metric tests\  for articleanew task-article_testsob.m.shape m-mob.m.shape m-nob.m.shape m-shortob.m.shape n-short: USE.UNITY.WEIGHTS { m-source m-target -- }	'c mw.unity m-source put.linear.weight.function: []	'c mw.unity m-target put.linear.weight.function: []	'c mw.unity m-source put.row.weight.function: []	'c mw.unity m-target put.row.weight.function: []	'c mw.unity m-source put.column.weight.function: []	'c mw.unity m-target put.column.weight.function: []	;: USE.1/i.WEIGHTS { m-source m-target -- }	'c mw.1/i m-source put.linear.weight.function: []	'c mw.1/i m-target put.linear.weight.function: []	'c mw.1/i m-source put.row.weight.function: []	'c mw.1/i m-target put.row.weight.function: []	'c mw.1/i m-source put.column.weight.function: []	'c mw.1/i m-target put.column.weight.function: []	;: USE.1/i^^2.WEIGHTS { m-source m-target -- }	'c mw.1/i^^2 m-source put.linear.weight.function: []	'c mw.1/i^^2 m-target put.linear.weight.function: []	'c mw.1/i^^2 m-source put.row.weight.function: []	'c mw.1/i^^2 m-target put.row.weight.function: []	'c mw.1/i^^2 m-source put.column.weight.function: []	'c mw.1/i^^2 m-target put.column.weight.function: []	;: INIT.ARTICLE.TESTS	20 1 new: m-n	20 1 new: m-m	stuff{ 1 5 12 2 9 6 }stuff: m-m	stuff{ 7 6 4 9 8 1 }stuff: m-n\	3 1 new: n-short	3 1 new: m-short	0 put.curr-dim: m-short	0 put.curr-dim: n-short	stuff{ 1 2 4 }stuff: m-short	stuff{ 1 5 9 }stuff: n-short\;: TERM.ARTICLE.TESTS	free: m-m	free: m-n	free: m-short	free: n-short;init.article.tests0 ph: m-n 0 ph: m-m cr cr0 ph: m-short0 ph: n-short cr crcr: RUN.METRICS { m-source m-target -- }	m-source m-target \	use.unity.weights	use.1/i.weights\	use.1/i^^2.weights	cr cr	m-target m-source ulm: [] f. tab ." ulm "  cr 	m-target m-source ulm.relative.scaled: [] f. tab ." relative scaled ulm "  cr 	m-target m-source ulm.unscaled: [] f. tab ." unscaled ulm "  cr cr\	m-target m-source olm: [] f. tab ." olm " cr	m-target m-source olm.squared: [] f. tab ." olm squared " cr	m-target m-source olm.relative.scaled: [] f. tab ." relative scaled olm " cr	m-target m-source olm.unscaled: [] f. tab ." unscaled olm " cr 	m-target m-source olm.unscaled.squared: [] f. tab ." unscaled olm squared" cr cr\	m-target m-source ocm: [] f. tab ." ocm " cr	m-target m-source ocm.squared: [] f. tab ." ocm squared " cr	m-target m-source ocm.relative.scaled: [] f. tab ." relative scaled ocm " cr	m-target m-source ocm.unscaled: [] f. tab ." unscaled ocm " cr 	m-target m-source ocm.unscaled.squared: [] f. tab ." unscaled ocm squared" cr cr\	m-target m-source ucm: [] f. tab ." ucm " cr	m-target m-source ucm.relative.scaled: [] f. tab ." relative scaled ucm " cr	m-target m-source ucm.unscaled: [] f. tab ." unscaled ucm " cr cr\ 	0 m-target m-source  correlation: [] f. tab ." correlation " cr	0 m-target m-source  correlation': [] f. tab ." correlation' " cr	0 m-target m-source combinatorial.correlation': [] f. tab ." combinatorial.correlation' " cr cr cr\	m-target m-source uld: [] f. tab ." uld " cr	m-target m-source old: [] f. tab ." old " cr	m-target m-source ucd: [] f. tab ." ucd " cr	m-target m-source ocd: [] f. tab ." ocd " cr	cr	0 m-target ph: []	0 m-source ph: []; : RUN.LONG	m-n m-m run.metrics	cr cr;: RUN.SHORT	n-short m-short run.metrics;if.forgotten term.article.tests