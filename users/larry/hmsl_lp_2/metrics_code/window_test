\ windowing example for articleanew task-window_testfvariable metric-sumfvariable running-weightfvariable w-lengthv: which-weightob.m.shape w-longob.m.shape w-windowob.m.shape w-short0 k: start1 k: end2 k: start.end3 k: middlestart which-weight !: STUFF.WINDOW.TEST	51 1 new: w-long	17 1 new: w-short	17 1 new: w-window	0 put.curr-dim: w-short	0 put.curr-dim: w-long	stuff{ 2 3 5 9 3 12 11 10 7 2 10 11 12 1 13 1 15 }stuff: w-short	stuff{  	2 3 5 9 3 12 11 10 7 2 10 11 12 1 13 1 15	2 3 5 9 3 12 11 10 7 2 10 11 12 1 13 1 15	2 3 5 9 3 12 11 10 7 2 10 11 12 1 13 1 15	 }stuff: w-long	0 16 0 scramble: w-long	34 50 0 scramble: w-long	stuff{	17 0	DO		i 0 ed.at: w-long	LOOP	}stuff: w-window;: W.START ( i -- f.scalar ) 	float w-length f@ fswap f- 	w-length f@ 	f/ ;: W.END	float 	w-length f@ 	f/ ;: W.START.END { idx -- }	w-length f@ 2.0 f/  	idx float f- fabs \ abs(l/2 - i)	w-length f@ 2.0 f/	f/;\ absolute value of half the length minus i, divided by half the length: W.MIDDLE { idx -- }	1.0 	w-length f@ 2.0 f/ \ length/2	idx float f- fabs \ abs(l/2 - i)	w-length f@ 2.0 f/	f/	f-;: USE.WEIGHT { idx  weight -- }	weight	CASE 		start of idx w.start endof		end of idx w.end endof		start.end of idx w.start.end endof		middle of idx w.middle endof	ENDCASE;: USE.METRIC { metric-# -- }	metric-#	CASE 		olm of olm: [] endof		ocm of ocm: []  endof		old of old: []  endof		ocd of ocd: []  endof	ENDCASE;: WINDOW { metric-id -- }	w-long w-short use.unity.weights	0.0 metric-sum f!	0.0 running-weight f!	w-long many: []	w-short many: [] - dup float w-length f!	0 	DO		many: w-window 		0 DO			i j +  0 ed.at: w-long 			i 0 ed.to: w-window 		LOOP		w-window w-short metric-id use.metric \ metric		i which-weight @ use.weight \ metric weight		fdup running-weight f@ f+ running-weight f! \ metric weight		f* 		metric-sum f@ f+  metric-sum f!	LOOP	metric-sum f@ running-weight f@ f/ ;	: RUN.WINDOWS	cr	." OLM " tab ." OCM " tab ." OLD " tab ." OCD " cr	4 0 DO		i which-weight !		olm window f. tab		ocm window f. tab		old window f. tab		ocd window f. tab	LOOP	cr;: WX	stuff.window.test	." W-Short "	0 pv: w-short	cr cr	." W-Long "	0 pv: w-long;wx0 ph: w-short cr0 ph: w-long cr0 ph: w-window cr: TERM.WINDOW.TEST	free: w-short	free: w-long	free: w-window	;if.forgotten term.window.test