\ article example\ 5 melodies\ august, 1994anew task-article_5_melodies\ set floating point precision2 placesob.m.shape mel-1ob.m.shape mel-2ob.m.shape mel-3ob.m.shape mel-4ob.m.shape mel-5fvariable temp-sumob.objlist 5-melodieslogto " 5_melody_data " : STUFF.MEL-1	14 2 new: mel-1	stuff{ 	72 4 			71 4 72 4 71 4 72 4 			77 4 72 4 69 6 70 2			72 4 69 4 65 4 67 4			69 12 	}stuff: mel-1;: STUFF.MEL-2	14 2 new: mel-2	stuff{ 	71 2 72 2			75 12 71 2 72 2			75 2 72 2 75 2 74 2 73 4 71 2 72 2			75 2 63 14	}stuff: mel-2;: STUFF.MEL-3	14 2 new: mel-3	stuff{ 	63 1 66 1 70 1 73 1 72 6 63 2			69 2 66 1 62 1 68 4 68 2 65 1 61 1 67 4	}stuff: mel-3;: STUFF.MEL-4	14 2 new: mel-4	stuff{ 	71 2 72 4 70 4 67 4			68 2 69 4 65 10			71 2 72 4 70 4 67 4			68 2 69 4 65 10	}stuff: mel-4;: STUFF.MEL-5	14 2 new: mel-5	stuff{ 	55 4 67 4 65 4 64 4 			61 4 62 4 69 8			59 4 71 4 69 4 67 4			66 4 67 4 72 8	}stuff: mel-5;: USE.UNITY.WEIGHTS 	many: 5-melodies 0 DO		'c mw.unity i at: 5-melodies put.linear.weight.function: []		'c mw.unity i at: 5-melodies put.row.weight.function: []		'c mw.unity i at: 5-melodies put.column.weight.function: []	LOOP;: USE.1/i.WEIGHTS 	." Setting 1/i weights " cr	many: 5-melodies 0 DO		'c mw.1/i i at: 5-melodies put.linear.weight.function: []		'c mw.1/i i at: 5-melodies put.row.weight.function: []		'c mw.1/i i at: 5-melodies put.column.weight.function: []	LOOP	;: INIT.ARTICLE_5_MELODIES { | curr-shape -- }	stuff.mel-1 stuff.mel-2 stuff.mel-3 stuff.mel-4 stuff.mel-5	5 new: 5-melodies	stuff{ mel-1 mel-2 mel-3 mel-4 mel-5 }stuff: 5-melodies	many: 5-melodies 0 DO		i at: 5-melodies -> curr-shape		0 curr-shape put.curr-dim: []		." Melody " i 1+ . 		1 curr-shape ph: []		0 curr-shape ph: [] cr cr	LOOP;: TERM.ARTICLE_5_MELODIES	freeall: 5-melodies	free: 5-melodies;init.article_5_melodies : SET.CURRENT.DIMENSION { c-d -- }	many: 5-melodies 0 DO		c-d 		i at: 5-melodies 		put.curr-dim: []	LOOP;: RUN.OCD	 { | m-source m-target -- }	cr	0.0 temp-sum f!	use.unity.weights	tab tab ." Dim. 0 " tab ." Dim. 1 " tab ." Ave. " cr	many: 5-melodies 0 DO		i at: 5-melodies -> m-source		many: 5-melodies i 1+ 		DO			i at: 5-melodies -> m-target			0 set.current.dimension			m-source name: [] tab			m-target name: [] tab			m-source m-target ocd: [] fdup temp-sum f! f. tab			1 set.current.dimension			m-source m-target ocd: [] fdup temp-sum f@ f+ temp-sum f! f. tab			temp-sum f@ 2.00 f/ f. cr		LOOP	LOOP;: RUN.OLD	 { | m-source m-target -- }	cr	0.0 temp-sum f!	use.unity.weights	tab tab ." Dim. 0 " tab ." Dim. 1 " tab ." Ave. " cr	many: 5-melodies 0 DO		i at: 5-melodies -> m-source		many: 5-melodies i 1+ 		DO			i at: 5-melodies -> m-target			0 set.current.dimension			m-source name: [] tab			m-target name: [] tab			m-source m-target old: [] fdup temp-sum f! f. tab			1 set.current.dimension			m-source m-target old: [] fdup temp-sum f@ f+ temp-sum f! f. tab			temp-sum f@ 2.00 f/ f. cr		LOOP	LOOP;: RUN.ULM	 { | m-source m-target -- }	cr	0.0 temp-sum f!	use.unity.weights	tab tab ." Dim. 0 " tab ." Dim. 1 " tab ." Ave. " cr	many: 5-melodies 0 DO		i at: 5-melodies -> m-source		many: 5-melodies i 1+ 		DO			i at: 5-melodies -> m-target			0 set.current.dimension			m-source name: [] tab			m-target name: [] tab			m-source m-target ulm: [] fdup temp-sum f! f. tab			1 set.current.dimension			m-source m-target ulm: [] fdup temp-sum f@ f+ temp-sum f! f. tab			temp-sum f@ 2.00 f/ f. cr		LOOP	LOOP;: RUN.OLM	 { | m-source m-target -- }	cr	0.0 temp-sum f!	use.unity.weights	tab tab ." Dim. 0 " tab ." Dim. 1 " tab ." Ave. " cr	many: 5-melodies 0 DO		i at: 5-melodies -> m-source		many: 5-melodies i 1+ 		DO			i at: 5-melodies -> m-target			0 set.current.dimension			m-source name: [] tab			m-target name: [] tab			m-source m-target olm: [] fdup temp-sum f! f. tab			1 set.current.dimension			m-source m-target olm: [] fdup temp-sum f@ f+ temp-sum f! f. tab			temp-sum f@ 2.00 f/ f. cr		LOOP	LOOP;: RUN.METRICS.TO.1 { | m-target -- }	cr ." Take all four metrics to first melody " cr	tab ." OLM		ULM		OLD		OCD " tab ."	OLM		ULM		OLD		OCD	" cr	many: 5-melodies 1 DO		i at: 5-melodies -> m-target		0 set.current.dimension		cr 		i . tab		m-target mel-1 olm: [] f. tab		m-target mel-1 ulm: [] f. tab		m-target mel-1 old: [] f. tab		m-target mel-1 ocd: [] f. tab tab		1 set.current.dimension		m-target mel-1 olm: [] f. tab		m-target mel-1 ulm: [] f. tab		m-target mel-1 old: [] f. tab		m-target mel-1 ocd: [] f. tab	LOOP;: RUN.METRICS.TO.5 { | m-target -- }	cr ." Take all four metrics to fifth melody " cr	tab ." OLM		ULM		OLD		OCD " tab ."	OLM		ULM		OLD		OCD	" cr	many: 5-melodies 1- 0 DO		i at: 5-melodies -> m-target		0 set.current.dimension		cr 		i . tab		m-target mel-5 olm: [] f. tab		m-target mel-5 ulm: [] f. tab		m-target mel-5 old: [] f. tab		m-target mel-5 ocd: [] f. tab tab		1 set.current.dimension		m-target mel-5 olm: [] f. tab		m-target mel-5 ulm: [] f. tab		m-target mel-5 old: [] f. tab		m-target mel-5 ocd: [] f. tab	LOOP;: EUCLIDEAN.METRICS.1 { | m-target -- }		cr ." Take euclidian metrics to first melody " cr	tab ." pitch	dur       	d	" cr	many: 5-melodies 1 DO		i at: 5-melodies -> m-target		0 set.current.dimension		cr 		i 2 + . tab		m-target mel-1 olm: [] fdup f*		m-target mel-1 ocd: [] fdup f*		f+ fsqrt		fdup		f. tab		1 set.current.dimension		m-target mel-1 olm: [] fdup f*		m-target mel-1 ocd: [] fdup f*		f+ fsqrt		fdup		f. tab		fswap fdup f* fswap fdup f*		f+ fsqrt f.	LOOP	cr;: EUCLIDEAN.METRICS.5 { | m-target -- }		cr ." Take euclidian metrics to fifth melody " cr	tab ." pitch	dur       	d	" cr	many: 5-melodies 1- 0 DO		i at: 5-melodies -> m-target		0 set.current.dimension		cr 		i 2 + . tab		m-target mel-5 ulm: [] fdup f*		m-target mel-5 ocd: [] fdup f*		f+ fsqrt		fdup		f. tab		1 set.current.dimension		m-target mel-5 ulm: [] fdup f*		m-target mel-5 old: [] fdup f*		f+ fsqrt		fdup		f. tab		fswap fdup f* fswap fdup f*		f+ fsqrt f.	LOOP	cr;	: RUN.EXAMPLE	cr ." OLD " cr	run.old	cr ." OCD " cr	run.ocd	cr ." ULM " cr	run.ulm	cr ." OLM " cr	run.olm	run.metrics.to.1	cr	run.metrics.to.5	euclidean.metrics.1	euclidean.metrics.5	logend;if.forgotten term.article_5_melodies