\ all things objects...anew task-all_things_objects\ arrays and objects, distributions\ pitch distributionsob.array p-dist-uniformob.array p-dist-triangleob.array p-dist-harm\ an array to help set up a harmonic series distributionob.array harm-int-array\ this array keeps track of the actual probablities,\ the result of the stats and ideal probabilities...\ it is updated for every note, by adding or subtracting from the\ distribution array\ it's normalized to 1000ob.array p-dist-adjusted\ simple duration distributionob.array d-dist-uniform\ cross-faded distributionob.array p-mixed-dist\ statisticsob.array p-statsob.array d-statsob.objlist p-dist-array\ main melody shapeob.shape piece-shape\ play midiob.player all_things-player\ all distribution arrays sum to 1000\ triangle has highest probability in middle of array\ general utility for normalizing all arrays to 1000: NORMALIZE.ARRAY { temp-array | temp-sum -- }	0 -> temp-sum	pitch_range 0 DO		i temp-array at: []		temp-sum + -> temp-sum	LOOP	temp-sum .	pitch_range 0 DO		i temp-array at: []		1000 temp-sum */		i temp-array to: []	LOOP;\ harmonic numbers 2-17: INIT.P-DIST-HARM	16 new: harm-int-array	stuff{		0 7 		12 16 19 22 		24 26 28 30 31 33 34 35		36 37	}stuff: harm-int-array	16 0 DO		17 i - ( probability )		dup *		i at: harm-int-array 		to: p-dist-harm	LOOP		;: TEST.HARMONIC.SERIES	16 0 DO		i at: harm-int-array		lowest_pitch + .	LOOP;: FILL.ALL_THINGS_OBJECTS { | temp-sum temp-sum2 temp-index -- } 	2000 5 new: piece-shape ." shape initialized "	\ 4th dimension is keeping track of current-time	\ 5th is section #	#_sections 1+  new: p-dist-array \ three distributions, two sections	p-dist-triangle add: p-dist-array	p-dist-harm add: p-dist-array	p-dist-uniform add: p-dist-array	number_durations new: d-dist-uniform	number_durations  new: d-stats	number_durations 0 DO		i i to: d-dist-uniform	LOOP	pitch_range new: p-dist-uniform	pitch_range new: p-dist-triangle	pitch_range new: p-dist-harm		pitch_range new: p-dist-adjusted	pitch_range new: p-stats	init.p-dist-harm	\ initialize triangle and uniform	pitch_range 0 DO		\ uniform distribution		1000 pitch_range / i to: p-dist-uniform		\ triangle distribution		pitch_range 2/ ( -- half-range ) 		pitch_range 2/ i -		abs - 		dup dup * * ( cube it to make the range more exaggerated ) 		i to: p-dist-triangle	LOOP;: NORMALIZE.DISTRIBUTIONS	p-dist-triangle normalize.array	p-dist-harm normalize.array	\ uniform is already normalized by definition;: FILL.ADJUSTED.ARRAY 	pitch_range 0 DO		i curr-dist @ at: []		i to: p-dist-adjusted	LOOP;: CLEAR.STATS	pitch_range 0 DO		0 i to:  p-stats	LOOP;: INIT.ALL_THINGS_OBJECTS	fill.all_things_objects ." filled " 	normalize.distributions ." normalized "	clear.stats ." cleared ";