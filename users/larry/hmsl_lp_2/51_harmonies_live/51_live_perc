\ 51 live percussionanew task-51_live_perc\ ob.player chord-player is defined in constantsob.instrument perc-instrumentv: perc-repeat-flagv: perc-first-notev: perc-on?v: perc-transpose-factorv: perc-drop-out-factorv: perc-primary-presetv: perc-secondary-preset: PERC-PLAYER-START.FUNC { player | coll -- } 	\ pick possibility of perc not playing for section	\ rises to middle and then falls	triangle-value	8 choose > 	IF		true perc to: voices-on?		1 perc put.value: cg-voices-on	ELSE		false perc to: voices-on?		0 perc put.value: cg-voices-on	THEN	\	0 perc-first-note !	\ first set preset for this section	perc 1+ midi.channel!	perc #-presets choose 	ed.at: 51-presets 	dup perc-primary-preset !	midi.preset	perc many: 51-presets choose 	ed.at: 51-presets 	perc-secondary-preset !	\ now get the current collection, and add the shapes to this player	curr-section @ 	at: collection-list	-> coll	coll many: []	player set.many: []	many: coll 0 DO		i coll at: []		i player put: []	LOOP;: PERC-PLAYER-REPEAT.FUNC { player | coll -- }	0 perc-repeat-flag !	0 perc-first-note !;		: PERC-PLAYER-DUR.FUNC { el shape -- }	arp-pulse;: INIT.PERC-PLAYER	max-shapes new: perc-player	1 put.repeat: perc-player	perc-instrument put.instrument: perc-player	'c perc-player-dur.func put.dur.function: perc-player	'c perc-player-start.func put.start.function: perc-player	'c perc-player-repeat.func put.repeat.function: perc-player	;: PERC.VEL.PRIMARY { el shape  -- }	\ if arps is turned off, set all velocities to be zero	perc at: voices-on?	IF		el 0= 		perc-first-note @ 0= 		and		IF			127 96 wchoose		ELSE			el 0= 			IF				90 60 wchoose			THEN		THEN		perc at: voice-loudness 100 */	ELSE		0	THEN;: PERC.VEL.SECONDARY { el shape  -- }	\ if arps is turned off, set all velocities to be zero	perc at: voices-on?	triangle-value	15 choose > \ but leave out some notes	and 	IF		\ volume goes up for the smaller percussion part as the piece progresses		65 		triangle-value		+ 		triangle-value		wchoose		perc at: voice-loudness 100 */	ELSE		0	THEN;: PERC-INSTRUMENT.FUNC {  el shape ins | dur scalar -- }	ins get.channel: []  midi.channel!	midi.lastoff	\ only play on first note of each shape	el 0= 	triangle-value	25 choose > not	and	IF			perc-primary-preset @ midi.preset		\ first pick duration of perc		shape many: [] 1+ 1 wchoose 2 min arp-pulse * -> dur		el shape at: [] 3 choose -12 * +		el shape perc.vel.primary dur midi.noteon.for	THEN	\ now start a process which plays other notes...	 perc-first-note @ 0= 	\ and also make this a little less likely to happen	IF		rtc.time@ vtime!		perc-primary-preset @ midi.preset		triangle-value		\ gives a number between -12 - 0 - 12, ascending towards middle		2/ choose 2 choose		0=		IF			-1		ELSE			1		THEN		* 		collection-time @ \ -12-12  #-notes		+ dup \ add or subtract to the pulse   pulse pulse		collection-time @ arp-pulse * swap /		 -> dur		0 		DO			dur vtime+!			el shape at: []			el shape perc.vel.secondary 			dur midi.noteon.for		LOOP		rtc.time@ vtime!		1 perc-first-note ! \ set for next time around		THEN;	: INIT.PERC-INSTRUMENT	0 put.offset: perc-instrument	perc 1+ put.channel: perc-instrument	'c perc-instrument.func put.on.function: perc-instrument;: INIT.PERC	init.perc-player	init.perc-instrument;: TERM.PERC	free: perc-player	free: perc-instrument;