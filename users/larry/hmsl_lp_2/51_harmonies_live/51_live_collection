\ controlling collection for whole pieceanew task-51_live_collection: PRINT.SECTION.CHANGE	  cr tab ." Section = " curr-section @ . cr \	tab ." Number of repeats = " get.number.repeats .  ;	: 51-LIVE-COLL-START.FUNC { coll | repeats  msec-pulse -- } 	0 curr-section !	get.number.repeats  -> repeats	repeats put.repeat: arp-player 	repeats put.repeat: chord-player 	repeats put.repeat: accent-player 	repeats put.repeat: perc-player \	print.section.change\	send.new.section.to.slave\	cr cr cr\	arp-pulse 1000 rtc.rate@ */\	4 * -> msec-pulse\	bell ." 1 " tab msec-pulse msec \	bell ." 2 " tab msec-pulse msec \	bell ." 3 " tab msec-pulse msec \	bell ." 4 " tab msec-pulse msec cr;	: 51-LIVE-COLL-STOP.FUNC { coll  -- }	midi.killall	midi.panic	bell bell cr cr cr tab ." PIECE FINISHED " cr cr cr cr	hmsl.stop;	: 51-LIVE-COLL-REPEAT.FUNC { coll | repeats -- }	1 curr-section   +!	25 25 curr-section @  - abs - -> triangle-value 	print.section.change	send.new.section.to.slave;: INIT.51-LIVE-COLL	10 new: 51-live-coll	act.parallel: 51-live-coll	arp-player add: 51-live-coll	chord-player add: 51-live-coll	accent-player add: 51-live-coll	perc-player add: 51-live-coll	melody-1-job add: 51-live-coll	melody-2-job add: 51-live-coll	51 put.repeat: 51-live-coll	'c 51-live-coll-start.func put.start.function: 51-live-coll	'c 51-live-coll-stop.func put.stop.function: 51-live-coll	'c 51-live-coll-repeat.func put.repeat.function: 51-live-coll;: TERM.51-LIVE-COLL	freeall: 51-live-coll	free: 51-live-coll;if.forgotten term.51-live-coll	