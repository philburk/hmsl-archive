\ 51 midi inputanew task-51_midi_input: GO.TO.NEXT.SECTION { c-# val  -- }	\ switch	c-# 65 = 	IF		val 0= not		IF			next-section?  @ 1+ 2 mod 			next-section? !			next-section? @ 			IF				curr-section @ 50 =				IF					." !!!!ABOUT TO END PIECE!!!!!! "  cr				ELSE					send.change.of.section.to.slave					cr  ." TO SECTION: " curr-section @ 1+ .					THEN			THEN		THEN	THEN	\ only read this next sequence if you want to use the volume pedal	vol-pedal? IF		c-# 7 =		IF			val 250 127 */ 200 + -> mm-marking			mm-marking mm->pulse -> arp-pulse			mm-marking 0 put.value: cg-arp-pulse			draw: cg-arp-pulse		THEN	THEN;\ this is a kluge, which phil corrected in the next version of HMSL\ which prevents the midi parser from spitting out lots of text...: MP.KLUGE.SYSEX ( vendor -- , eat bytes until F7 )    drop     midi.rtc.time@ mp-last-time !\	." eating "    BEGIN        midi.recv        IF midi.rtc.time@ mp-last-time !        	$ F7 =        ELSE rtc.time@ mp-last-time @ - rtc.rate@ / 10 >        	abort" MP.EAT.SYSEX - timed out!"        	false        THEN    UNTIL;: 51.MIDI.INPUT.INIT\	'c mp.kluge.sysex mp-sysex-vector !	vol-pedal? IF		." Using MIDI volume pedal for slowing arp-pulse " cr	THEN	midi.flush 	midi.clear	'c go.to.next.section mp-control-vector !	midi.parser.on cr ." MIDI PARSER ON " cr;: TERM.51.MIDI.INPUT	midi.flush	midi.clear	mp.reset;IF.FORGOTTEN TERM.51.MIDI.INPUT