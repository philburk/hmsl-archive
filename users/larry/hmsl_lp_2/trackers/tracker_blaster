\ blasteranew task-tracker_blasterv: blaster-counterv: blaster-number: BLASTER-JOB.START.FUNCTION { job -- }	20 2 wchoose blaster-number !	0 blaster-counter !	;: BLASTER-JOB.FUNCTION { job -- }	blaster-counter @ blaster-number @ <	IF		5 1 wchoose 0 		DO			2 choose 			IF				drum_channel midi.channel!			ELSE			\	16 9 wchoose midi.channel!			THEN			110 30 wchoose 128 30 wchoose midi.noteon		LOOP		rtc.rate@ 4 / rtc.rate@ 30 / wchoose		job	put.duration: []		1 blaster-counter +!	ELSE		job stop: []	THEN;: CG-BLASTER.FUNCTION { val part -- }	start: blaster-job;: BUILD.CG-BLASTER	9 put.text.size: cg-blaster	1 1 new: cg-blaster	" Blaster " put.title: cg-blaster	330 300 put.wh: cg-blaster	'c cg-blaster.function put.down.function: cg-blaster	stuff{ " blast! " }stuff.text: cg-blaster;: INIT.BLASTER	1 new: blaster-job	'c blaster-job.function add: blaster-job	'c blaster-job.start.function put.start.function: blaster-job;: TERM.BLASTER	free: blaster-job;if.forgotten term.blaster