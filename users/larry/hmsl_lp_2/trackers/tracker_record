\ tracker recordinganew task-tracker_record: INIT.T-TEMP-1	100 3 new: t-temp-1;\ set echo channel to really high one, not used...5 rc-echo-channel ! : CG-TRACKER.REC.FUNCTION 	display.time	midi.clear	14 put.text.size: cg-tracker-record	200 5800 scg.move " !!!!!  RECORDING !!!!! " gr.text	curr-tracker @ 1+ gr.number	9 put.text.size: cg-tracker-record	empty: t-temp-1	t-temp-1 record.wait	200 5200 scg.move " Current tracker: " gr.text curr-tracker @ 1+ gr.number;: CG-TRACKER.STOP.FUNCTION { | new-tracker -- }	time@ record.stop	200 5800 scg.move "                                           " gr.text\ first, clone to a new shape	instantiate ob.tracker dup -> new-tracker	add: tracker-list	t-temp-1 new-tracker	sh.compress.notes	new-tracker many: [] ." #notes (pre-deglitch) " . tab	shortest-note @  new-tracker deglitch: []	new-tracker many: []	." #notes (after deglitch) " . cr	new-tracker curr-tracker @ at: tracker-player-list add: [] \ add this one to the player	new-tracker add: shape-holder	1 curr-tracker +! \ increment number	curr-tracker @ 100 > 	IF		cr cr cr ." TOO MANY TRACKERS !!!!!! " curr-tracker ?  cr cr cr 	THEN	;: CG-TRACKER.RECORD.FUNCTION { val part -- }	part 0= IF		cg-tracker.rec.function	THEN	part 1 = IF		cg-tracker.stop.function	THEN;: BUILD.CG-TRACKER-RECORD	2 1 new: CG-TRACKER-RECORD	9 put.text.size: cg-tracker-record	400 300 put.wh: CG-TRACKER-RECORD	stuff{ " Record " " Stop " }stuff.text: CG-TRACKER-RECORD	false 0 put.value: CG-TRACKER-RECORD	'c cg-tracker.record.function put.down.function: CG-TRACKER-RECORD;: INIT.TRACKER.RECORD	init.t-temp-1;: TERM.TRACKER.RECORD	free: t-temp-1;