 \ flammer fileanew task-tracker_flammer: FLAMMER.INSTRUMENT.INTERPRETER { el shape ins -- }	el 1 shape ed.at: []	el 2 shape ed.at: []	midi.noteon	flammer-bend-on? @ IF		100 choose 20 <		IF			hex 4000 choose midi.bend decimal		THEN	THEN;: INIT.FLAMMER.OBJECTS	1 new: flammer-before-player	1 new: flammer-after-player	f-#-notes-before @ 3  new: flammer-before-shape	f-#-notes-before @ 3  new: flammer-after-shape	'c flammer.instrument.interpreter put.on.function: flammer-before-instrument	'c flammer.instrument.interpreter put.on.function: flammer-after-instrument		0 put.offset: flammer-before-instrument	0 put.offset: flammer-after-instrument	drum_channel put.channel: flammer-before-instrument	drum_channel put.channel: flammer-after-instrument	flammer-before-instrument put.instrument: flammer-before-player	flammer-after-instrument put.instrument: flammer-after-player	flammer-before-shape add: flammer-before-player	flammer-after-shape add: flammer-after-player;	: CG-TRACKER-FLAMMER-PARAMS.FUNCTION { val part -- }	part CASE		0 OF val f-#-notes-before ! ENDOF		1 OF val f-#-notes-after ! ENDOF		2 OF val flammer-prob ! ENDOF		\ spans are computed as actual spans, based on the percent from the screen		\ and the pulse duration. it's divided by two to scale it to half the duration		3 OF val	f-before-span ! ENDOF		4  OF  val	f-after-span ! ENDOF		5 OF val flammer-before-note ! ENDOF		6  OF val flammer-after-note ! ENDOF		7 OF val d-arch-range ! ENDOF		8 OF val a-arch-range ! ENDOF		9 OF val f-before-loudness ! ENDOF		10 OF val f-after-loudness ! ENDOF		11 of val flammer-bend-on? ! ENDOF	ENDCASE;: BUILD.CG-TRACKER-FLAMMER-PARAMS 	1 12 new: CG-TRACKER-FLAMMER-PARAMS	250 300 put.wh: CG-TRACKER-FLAMMER-PARAMS	9 put.text.size: CG-TRACKER-FLAMMER-PARAMS	'c CG-TRACKER-FLAMMER-PARAMS.FUNCTION put.down.function: cg-tracker-flammer-params	" Flammer " put.title: CG-TRACKER-FLAMMER-PARAMS	0 0 put.min:   CG-TRACKER-FLAMMER-PARAMS	0 1 put.min:   CG-TRACKER-FLAMMER-PARAMS	0 2 put.min:   CG-TRACKER-FLAMMER-PARAMS	0 3 put.min:   CG-TRACKER-FLAMMER-PARAMS	0 4 put.min:   CG-TRACKER-FLAMMER-PARAMS	30 5 put.min:  cg-tracker-flammer-params	30 6 put.min:  cg-tracker-flammer-params	1 7 put.min:   cg-tracker-flammer-params	1 8 put.min:   cg-tracker-flammer-params	0 9 put.min: 	cg-tracker-flammer-params	0 10 put.min: 	cg-tracker-flammer-params	0 11 put.min: 	cg-tracker-flammer-params\		25 0 put.max:  CG-TRACKER-FLAMMER-PARAMS	25 1 put.max:  CG-TRACKER-FLAMMER-PARAMS	100 2 put.max: CG-TRACKER-FLAMMER-PARAMS	100 3 put.max: CG-TRACKER-FLAMMER-PARAMS	100 4 put.max: CG-TRACKER-FLAMMER-PARAMS	76 5 put.max:  CG-TRACKER-FLAMMER-PARAMS	76 6 put.max:  CG-TRACKER-FLAMMER-PARAMS	3 7 put.max:   cg-tracker-flammer-params	3 8 put.max:   cg-tracker-flammer-params	100 9 put.max: cg-tracker-flammer-params	100 10 put.max: cg-tracker-flammer-params	1 11 put.max: cg-tracker-flammer-params\	f-#-notes-before @ 0 put.value: CG-TRACKER-FLAMMER-PARAMS	f-#-notes-after @ 1 put.value: CG-TRACKER-FLAMMER-PARAMS	flammer-prob @ 2 put.value: CG-TRACKER-FLAMMER-PARAMS	f-before-span @ 3 put.value: CG-TRACKER-FLAMMER-PARAMS	f-after-span @ 4 put.value: CG-TRACKER-FLAMMER-PARAMS	flammer-before-note @ 5 put.value: CG-TRACKER-FLAMMER-PARAMS	flammer-before-note @ 6 put.value: CG-TRACKER-FLAMMER-PARAMS	d-arch-range @ 7 put.value: cg-tracker-flammer-params	a-arch-range @ 8 put.value: cg-tracker-flammer-params	f-before-loudness @ 9 put.value: cg-tracker-flammer-params	f-after-loudness @ 10 put.value: cg-tracker-flammer-params	0 11 put.value: cg-tracker-flammer-params\		stuff{ " #-notes(1) " " #-notes(2) " " Prob. " " t-before " " t-after " " b-note "	" a-note " " #-d-arch " " #-a-arch " " b-loud " " a-loud " " bend? "	}stuff.text: CG-TRACKER-FLAMMER-PARAMS;: CG-FLAM-ON.FUNCTION { val part -- }	part 0=	IF		val f-before !	THEN	part 1 = 	IF		val f-after !	THEN	part 2 =	IF 		val divider-on? !		val 0= IF stop: divider-job THEN	THEN;: BUILD.CG-FLAM-ON	3 1 new: cg-flam-on	360 325 put.wh: cg-flam-on	9 put.text.size: cg-flam-on	'c cg-flam-on.function put.down.function: cg-flam-on	stuff{ " before " " after " " divide " }stuff.text: cg-flam-on	" Flam on! " put.title: CG-FLAM-ON;: INIT.FLAMMER	init.flammer.objects	;: TERM.FLAMMER	free: flammer-before-player	free: flammer-after-player	free: flammer-before-shape	free: flammer-after-shape;