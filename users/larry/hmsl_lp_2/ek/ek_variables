\ EK Variablesanew task-EK_variables\ collection repeat to see if played twicev: coll-repeat-counter\ constants16 k: #_ek_channels\ melody constants30 k: ek_pulse3 k: ek_fund10 k: ek_step11 k: ek_skip\ archetype shapesob.shape mel-shapeob.shape mel.skip-shapeob.shape sus-shapeob.shape rhy-shape\ global variablesv: ek-density \ goes from 0 -100, overall prob of a voicev: ek-fund-hi \ absolute range of fundv: ek-fund-lov: ek-bendv: ek-controlv: ek-loudv: ek-stepv: ek-skipv: ek-staccv: ek-jitter\ optimizing speed variable, turns off choosing of voices not onv: optimize-choose?\ jitter variables for fund, loud, ..v: ek-fund-jitterv: ek-loud-jitterv: ek-control-jitter\ preset and jitter limitsv: preset-limitv: max-jitterv: skip/step-prob\ assign this in init file for a specific controller...v: ek-controller-#\ set this for how many times to repeat without changev: ek-#-repeats \ variables for preset choosingv: ek-channel-group \ determines which synthob.array ek-melody-arrayob.array ek-rhythm-arrayob.array ek-sustain-array\ instrument stuffob.objlist ek-instruments\ constant names for player data0 k: players-on?1 k: player-presets2 k: player-behaviors3 k: player-funds4 k: player-loudnesses5 k: player-densities6 k: player-fundlos7 k: player-fundhis8 k: player-bends9 k: player-controls10 k: player-steps11 k: player-skips12 k: player-staccs  \ %13 k: player-jitters \ %14 k: player-fund-bends15 k: player-step-bends16 k: player-skip-bends\ ek objectsob.collection ek-collectionob.shape ek-player-dataob.objlist ek-shapesob.objlist ek-player-list\ screen control grid declarationsob.screen ek-screen\ global cg'sob.check.grid cg-startob.check.grid cg-optimize-chooseob.numeric.grid cg-tempoob.numeric.grid cg-preset-limitob.numeric.grid cg-skip/step-probob.numeric.grid cg-time-advanceob.numeric.grid cg-max-jitterob.numeric.grid cg-#-repeatsob.numeric.grid cg-controller-#ob.numeric.grid cg-densityob.numeric.grid cg-loudob.numeric.grid cg-fundrangeob.numeric.grid cg-bendob.numeric.grid cg-controlob.numeric.grid cg-fundob.numeric.grid cg-presetob.numeric.grid cg-stepob.numeric.grid cg-staccob.numeric.grid cg-jitter\ ob.numeric.grid cg-fund-jitterob.numeric.grid cg-loud-jitterob.numeric.grid cg-control-jitter\ for control of playersob.check.grid cg-players-onob.numeric.grid cg-presetsob.numeric.grid cg-behaviorsob.numeric.grid cg-fundsob.numeric.grid cg-loudnessesob.numeric.grid cg-densitiesob.numeric.grid cg-fundhisob.numeric.grid cg-fundlosob.numeric.grid cg-bendsob.numeric.grid cg-controlsob.numeric.grid cg-stepsob.numeric.grid cg-staccsob.numeric.grid cg-jitters\ for enabling choice or not of parametersob.check.grid cg-players-on-chooseob.check.grid cg-presets-chooseob.check.grid cg-behaviors-chooseob.check.grid cg-funds-chooseob.check.grid cg-loudnesses-chooseob.check.grid cg-bends-chooseob.check.grid cg-controls-chooseob.check.grid cg-skips-chooseob.check.grid cg-steps-chooseob.check.grid cg-staccs-chooseob.check.grid cg-jitters-choose\ variable flags for the abovev: choose-on?v: choose-presets?v: choose-behaviors?v: choose-funds?v: choose-loudnesses?v: choose-bends?v: choose-controls?v: choose-skips?v: choose-steps?v: choose-staccs?v: choose-jitters?\ faders for behavioral probabilitiesob.fader cg-mel-probob.fader cg-invert-probob.fader cg-sustain-probob.fader cg-rhythm-probob.fader cg-highnote-probob.fader cg-lownote-probob.fader cg-lowhigh-probob.fader cg-accenthigh-probob.fader cg-accentlow-probob.fader cg-accentlowhigh-prob\ constant names for histogram probs10 k: #_behaviors0 k: mel1 k: invert2 k: sustain3 k: rhythm4 k: highnote5 k: lownote6 k: lowhigh7 k: accenthigh8 k: accentlow9 k: accentlowhigh\ histogram for probabilitiesob.shape ek-behavior-histogram\ stuff for click trackob.shape ek-click-shapeob.player ek-click-playerv: midi-click-notev: midi-click-loudnessv: midi-click-on?v: midi-click-presetv: midi-click-staccatoob.check.grid cg-clickob.numeric.grid cg-click-controlsv: t-start-time\ simple utility for keeping track of time....: DISPLAY.TIME	12 gr.height!	3200 7500 scg.move	time@  t-start-time @ - 	rtc.rate@ / ( number of seconds )	60  /mod gr.number 	" : " gr.text 	dup 10 <	IF 		0 gr.number	THEN	gr.number 	9 gr.height!;