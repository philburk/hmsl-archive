\ finally, do some stuff...anew task-c_init1018 rtc.rate!1024 ticks/beat !: DO.PLAYERS	init.c-players	make.big.shapes cr ." big shapes made " cr	print.stats;: C.CAPTURE	" casten:new_piece" $midifile0{ c-big-player hmsl.play }midifile0 ;cr crtab tab ." Type MELODY.LOOP to run computation " crtab tab ." after that logto a file and type PRINT.PIECE " cr tab tab ." and then C.CAPTURE to create players and capture midifile " cr cr cr: PRINT.NEW-SHAPES.DATA { | curr-data-array -- }	number-do 0 DO		i at: c-data-array ->  curr-data-array		 curr-data-array print: []	LOOP;: PRINT.NEW-SHAPES { | curr-section -- }	number-do 0 DO		i at: new-whole-piece -> curr-section		curr-section many: [] 0 		DO			cr i . ." : " tab 1 i curr-section at: [] ph: [] 		LOOP	LOOP;	: PRINT.METRICS { | curr-m-list -- }		number-do 0 DO		i at: rcs-metric-list -> curr-m-list		curr-m-list print: []	LOOP;	: PRINT.PIECE	do.players	print.new-shapes.data	cr cr	print.new-shapes	cr cr	cr cr ." the length of each new shape in each section is " 	print.new.manys	cr	print.metrics	cr	print: c-big-shape	cr	print: c-crawford-shape;: TERM.C-PLAYERS	free: c-big-shape	free: c-crawford-shape	free: c-big-player	free: c-crawford-player;if.forgotten term.c-players