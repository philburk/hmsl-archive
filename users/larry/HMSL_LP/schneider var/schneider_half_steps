\ schneider variations\ half step calculationsanew task-schneider_half_stepsinclude? task-ratio2cents horn:utilities:ratio2centsob.shape s-tuningob.shape s-shapeob.shape s-sort0 k: numerator1 k: denominator2 k: cents3 k: up-cents4 k: old-index: INIT.S-TUNING	100 2 new: s-tuning	100 4 new: s-shape	100 5 new: s-sort	stuff{		1 1 21 20 8 7 7 6 6 5 5 4 21 16 4 3 11 8 7 5 3 2 32 21 		99 64 63 40 12 7 7 4 9 5 15 8 40 21 63 32 1 1 		33 32 21 20 16 15 8 7 7 6 6 5 5 4 21 16 4 3 11 8 10 7 3 2		32 21 49 32 8 5 13 8 5 3 12 7 7 4 9 5 15 8 40 21 63 32 1 1 		33 32 21 20 9 8 8 7 7 6 6 5 5 4 21 16 4 3 11 8 10 7 35 24 3 2 		49 32 8 5 5 3 12 7 7 4 15 8 1 1	}stuff: s-tuning;	: r2t	ratio->cents;	: CALCULATE.S-SHAPE	1 1 0 0 add: s-shape	many: s-tuning 1	DO		i numerator ed.at: s-tuning		i denominator ed.at: s-tuning		2dup r2t 		dup 		i 1- 2 ed.at: s-shape 		- 		dup 0< 		IF			1200 +		THEN		add: s-shape	LOOP;v: sort-flag: INIT.S-SORT	many: s-shape 0 DO		i get: s-shape		i add: s-sort	LOOP	BEGIN		0 sort-flag !		many: s-sort 1- 0 DO			i up-cents ed.at: s-sort			i 1+ up-cents ed.at: s-sort			> IF				i i 1+ -1 swap: s-sort 				1 sort-flag !			THEN		LOOP		sort-flag @ not	UNTIL	print: s-sort	;: INIT.S	init.s-tuning	calculate.s-shape\	print: s-shape	init.s-sort;		 		: TERM.S-TUNING	free: s-tuning	free: s-shape	free: s-sort;4 tab-width !150 k: #-notes20 k: choose-scalarv: counterv: mod-counter : PICK.VARIATION { | curr-note cents-v old-ind -- }	6 2 wchoose mod-counter !	cr	#-notes 0 	DO		i many: s-sort #-notes */ ( where in list )  65 min		dup choose-scalar i #-notes */  -		0 max ( lower range in list )		wchoose 1 max -> curr-note	\ now pick the ratio, and find it's half step from s-shape				curr-note old-index ed.at: s-sort 		-> old-ind \ get its old index in tuning		2 choose 0=			IF				old-ind 1- 	numerator ed.at: s-shape .  backspace ." /"				old-ind 1- denominator ed.at: s-shape . space				old-ind numerator ed.at: s-shape .  backspace ."  /"				old-ind denominator ed.at: s-shape . 			ELSE					old-ind numerator ed.at: s-shape .  backspace ." /"				old-ind denominator ed.at: s-shape . space				old-ind 1- 	numerator ed.at: s-shape .  backspace ." /"				old-ind 1- denominator ed.at: s-shape . 			THEN		4 spaces		1 counter +!		counter @ mod-counter @ =		IF cr cr cr 0 counter ! 6 2 wchoose mod-counter ! THEN	LOOP;logto " foobar "init.spick.variationlogendif.forgotten term.s-tuning