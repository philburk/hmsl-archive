\ rp3\ half step calculationsanew task-rp3_half_stepsob.shape s-tuningob.shape s-shapeob.shape s-sort\ should be a total of 73 pitches in the tuning...10 tab-width !0 k: numerator1 k: denominator2 k: cents3 k: up-cents4 k: old-index1 k: HP2 k: GT\ just text for constant note names\ to distinguish between enharmonics, e.g 11 = D#, Eb = 1110 k: E1 k: F2 k: F#3 k: G4 k: G#44 k: ab5 k: A6 k: a#6 k: bb7 k: b8 k: c9 k: c#99 k: db10 k: d11 k: d#111 k: eb: PRINT.NOTE.NAME { note-# -- }	note-# 	CASE		0 of ." E " endof		1 of ." F " endof		2 of ." F# " endof		3 of ." G " endof		4 of ." Ab " endof		5 of ." A " endof		6 of ." Bb " endof		7 of ." B " endof		8 of ." C " endof		9 of ." C# " endof		10 of ." D " endof		11 of ." D# " endof		44 of ." Ab " endof		99 of ." Db " endof		111 of ." Eb " endof	ENDCASE;\ s-tuning dimensions: num, den, h/g note: INIT.S-TUNING	150 4 new: s-tuning	150 8 new: s-shape	150 6 new: s-sort	stuff{	1 1 -1 E \ phantom fundamental	7 4 hp D 	91 48 gt D# 	1 1 hp E 	8 7 hp F# 	6 5 hp G 	119 96 gt G# 	91 72 gt g#	4 3 hp A 	273 192 gt Bb 	3 2 hp B 	8 5 hp C 	77 48 gt C#	119 72 gt  Db 	7 4 hp D 	119 64 gt Eb 	91 48 gt Eb	\ harp octave 1				1 1 hp E 	77 72 gt F# 	 9 8 hp F#  	7 6 hp g 	7 6 gt g 	77 64 gt G#	119 96 gt Ab 	91 72 gt Ab 	21 16 hp A 	49 36 gt Bb 	49 36 gt Bb 	273 192 gt Bb	3 2 hp B 	49 32 hp C 	49 32 gt C 	14 9 gt C 	77 48 gt C#	119 72 gt Db 	7 4 hp D 	7 4 gt D 	49 27 gt Eb	119 64 gt Eb 	91 48 gt Eb \ harp octave 2			1 1 hp E	49 48 gt F	49 48 gt F 	77 72 gt F# 	35 32 hp F# 	7 6 gt G 	6 5 hp G	77 64 gt G#	119 96 gt Ab 	4 3 hp A	49 36 gt Bb	49 36 gt Bb	32 21 hp B 	49 32 gt C 	14 9 gt C	8 5 hp C	77 48 gt C#	7 4 gt D 	49 27 gt Eb 	15 8 hp D#	\ harp octave 3				1 1 hp E 	49 48 gt F	49 48 gt F 	9 8 hp F# 	7 6 hp G 	7 6 gt G 	21 16 hp A	49 36 gt Bb	3 2 hp B	49 32 hp C 	7 4 hp	D \ harp octave 4		1 1 hp E 	49 48 gt F 	8 7 hp F# 	6 5 hp G	}stuff: s-tuning;	: r2t	ratio->cents;\ s-shape: num den cents cents abscents(running sum) harp/guitar, note-name oct-#: CALCULATE.S-SHAPE { | running-sum oct-# -- }	-1 -> oct-#	0 -> running-sum	0 get: s-tuning drop \ get rid of harp/guitar	0 \ cents	0  \ cents	0 \ cents	-1	\ put it back in	0 \ note name	add: s-shape	many: s-tuning 1	DO		i  numerator ed.at: s-tuning		i  denominator ed.at: s-tuning		2dup r2t \ ratio cents		\ keep track of what octave you're in...		dup 0=		IF			oct-# 1+ -> oct-#		THEN		dup 		i 1 - 2 ed.at: s-shape 		- 		dup 0< 		IF			1200 +		THEN		0 ( seed running sum for later calculation ) 		\ now add harp and guitar		i 2 ed.at: s-tuning		\ now add note name		i 3 ed.at: s-tuning		oct-#		add: s-shape	LOOP	many: s-tuning 0	DO		i 3 ed.at: s-shape		running-sum + -> running-sum		running-sum i 4 ed.to: s-shape	LOOP	;: PRINT.TOTAL.TUNING	cr	." Complete Tuning: "	many: s-shape 0 DO		cr		i 1 ed.at: s-shape 1 = IF cr cr THEN		i 5 ed.at: s-shape 2 = IF tab THEN \ extra tab if guitar		tab i 0 ed.at: s-shape . ." / " i 1 ed.at: s-shape .		tab i 2 ed.at: s-shape . tab i 3 ed.at: s-shape .		tab i 5 ed.at: s-shape 1 = IF ." harp " ELSE ." guitar " THEN		tab i 6 ed.at: s-shape print.note.name 		tab i 7 ed.at: s-shape .	LOOP;	v: sort-flag: INIT.S-SORT	many: s-shape 0 	DO		i get: s-shape		i add: s-sort	LOOP	BEGIN		0 sort-flag !		many: s-sort 1- 0 DO			i up-cents ed.at: s-sort			i 1+ up-cents ed.at: s-sort			> IF				i i 1+ -1 swap: s-sort 				1 sort-flag !			THEN		LOOP		sort-flag @ not	UNTIL	print: s-sort	;: INIT.S	init.s-tuning	calculate.s-shape	print: s-shape\	init.s-sort	print.total.tuning;		 		: TERM.S-TUNING	free: s-tuning	free: s-shape\	free: s-sort;false .if\ 4 tab-width !150 k: #-notes20 k: choose-scalarv: counterv: mod-counter : PICK.VARIATION { | curr-note cents-v old-ind -- }	6 2 wchoose mod-counter !	cr	#-notes 0 	DO		i many: s-sort #-notes */ ( where in list )  65 min		dup choose-scalar i #-notes */  -		0 max ( lower range in list )		wchoose 1 max -> curr-note	\ now pick the ratio, and find it's half step from s-shape				curr-note old-index ed.at: s-sort 		-> old-ind \ get its old index in tuning		2 choose 0=			IF				old-ind 1- 	numerator ed.at: s-shape .  backspace ." /"				old-ind 1- denominator ed.at: s-shape . space				old-ind numerator ed.at: s-shape .  backspace ."  /"				old-ind denominator ed.at: s-shape . 			ELSE					old-ind numerator ed.at: s-shape .  backspace ." /"				old-ind denominator ed.at: s-shape . space				old-ind 1- 	numerator ed.at: s-shape .  backspace ." /"				old-ind 1- denominator ed.at: s-shape . 			THEN		4 spaces		1 counter +!		counter @ mod-counter @ =		IF cr cr cr 0 counter ! 6 2 wchoose mod-counter ! THEN	LOOP;.then\ logto " foobar " init.s\ pick.variation\ logendif.forgotten term.s-tuning