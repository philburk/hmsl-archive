\ MORE Utilities to support ODE
\
\ Author: Phil Burk
\ Copyright 1986 Phil Burk
\
\ MOD: PLB 12/13/89 Sped up CLIPTO
\ MOD: PLB 4/13/90 Add ?TERMINAL/8

include? toupper ju:char-macros

ANEW TASK-MORE_UTILS

hex
: NFA.MOVE ( nfa addr -- , copy name field to address and fix like string )
    >r count 1f and ( n+1 c ,  remove immediate bit )
    dup r@ c! ( set length at pad )
    r> 1+ rot rot 0 ( a+1 n+1 c 0 )
    DO
        2dup c@ 7f and  ( remove flags from characters )
        swap c!
        1+ swap 1+ swap ( advance )
    LOOP 2drop
;

: NFA->$ ( nfa -- $string , copy to pad )
    pad nfa.move pad
;
decimal

\ Assistance for debugging.
: BREAK ( -- , dump stack and allow abort )
    .s cr ." BREAK - Enter A to abort" cr
    key toupper ascii A =
    IF abort THEN
;

: BREAK" ( xxxx" -- , give message and break )
    [compile] ."
    compile break
; immediate

\ ?terminal that only happens so often to avoid slowing down system
V: ?term-count
: ?TERMINAL/64  ( -- key? , true if key pressed, sometimes )
    ?term-count @ dup
    1+ 63 AND ?term-count !
    0= IF ?terminal
    ELSE false
    THEN
;
: ?TERMINAL/8  ( -- key? , true if key pressed, sometimes )
    ?term-count @ dup
    1+ 7 AND ?term-count !
    0= IF ?terminal
    ELSE false
    THEN
;

\ Range checking and clipping tools.
: INRANGE? ( n lo hi -- flag , Is LO <= N <= HI ? )
    2 pick <
    IF 2drop false
    ELSE >=
    THEN
;

: CLIPTO ( n lo hi -- nclipped , clip N to range )
    >r max r> min
;

: BAD.CHAR? ( CHAR -- FLAG , true if non printing)
    32 126 inrange? not
;

: SAFE.EMIT ( char -- , emit if safe or '.' )
    dup bad.char?
    IF drop ascii . emit
    ELSE emit
    THEN
;

: BAD.STR? ( addr count -- , scan string for bad chars)
    0
    DO  dup i + c@ bad.char?
        IF  cr dup i + dup h. c@ h.
        THEN
    LOOP drop
;
