Macintosh Specific HMSL Release Notes for version V4.10New Installation ProceduresBecause we have replaced McSink with the HMSL text editor,the installation procedure has changed.  Ignore all references toMcSink in Chapter 1 of the HMSL Mac Supplement.  The new text editorcan be accessed from the File menu in HMSL.----------------------------------------------New Text Editor for Macintosh UsersThe most important new feature in V4.10 is the new Mac HMSL Text Editor.This is a replacement for McSink which we can no longer distributewith HMSL. Ignore ALL references to McSink in the Mac Supplement.This new editor uses the standard Mac interface that you areprobably already familiar with.  Its most important feature is thatyou can compile directly from the Editor without going first to disk.You should, of course, save to disk frequently just in case you crash.Look in the menus to see all the new features.An extra hidden feature is that if you highlight a section in the editorand hit the <Enter> key, that section will be interpreted by Forth!If you place the cursor on a line and hit <Enter>, that line will beinterpreted and the output sent to the editor. You can use thiswith DUMP.SOURCE: to generate source code right in the editor.This is new experimental code so let me know if you have anyproblems.-------------------------------------------------IF YOU USE MULTIFINDER - you will want to adjust the memorysize allocated to HMSL.  The ammount you need depends on howlarge your arrays and shapes are, how large your dictionary is,and how large the files you edit are.You can change the size allocated by selecting the HMSL4th iconon the disk then selecting the "Info..." item from the menu.If you have enough memory I recommend a setting between600 to 1000 KBytes.  If it is set too low, HMSL may quitunexpectedly.-------------------------------------------------MAC SUPPLEMENT, CHAPTER 4, PAGE 4The stack diagram for FSEEK is wrong.  It should be:  FSEEK  ( refnum  OFFSET MODE -- old-position )Also change the example so that the call to FSEEK is:  FREFNUM @  0  OFFSET__BEGINNING FSEEK . ( rewind )----------------------------------------------------Alternative MIDI InterfaceThere are now two choices for MIDI interface software:The Apple MIDI Manager or the HMSL Custom MIDI Driver.The default is the Apple MIDI Manager.To use the Custom driver, do the following:	1) Double click on HMSL4th. Do NOT initialize!		2) Enter:   USE.CUSTOM.MIDI		3) If you want to make this the new default, enter:		SAVE-FORTH			4) To initialize, enter:  HMSL.INIT	The advantages of the new Custom driver are:Faster output.  Even though this uses high level Forth forevent buffering(!) it is still faster than the Apple MIDI driver.Thus if chords come out as arpeggios under the MIDI Manager,try the custom driver.It works.  Sometimes people have trouble getting the Apple MIDIManager to work on their computers.If so, this might work instead.  Then again, the Custom MIDI driver might not work but maybe the MIDI Manager will.This way you have better odds that something will work.Source code available.  The source code for the custom driveris in HH:H4th_Custom_midi.  If you can figure it out,you can change it to suit your needs, if necessary.The disadvantages are:It is not compatible with other MIDI programs.  You cannot use theApple MIDI Patchbay to connect to other programs or other MIDI hardware.----------------------------------------------------Macintosh MIDI Manager Users - Last Minute InfoAlthough the Apple MIDI Manager is a great idea it has a few problems.The MIDI manager allows multiple applications to share the MIDI Ports,route data between applications, and supports time code, etc.I have put MIDI Manager V2.0.1 on the HMSL_User disk.Here are the known problems so you can defend yourself:1) Files can be corrupted when writing to floppy disks! Hard diskswork OK.  The new editor has a facility for turning offthe MIDI Manager before writing to disk.  It also supportscompilation directly from the editor, bypassing the step ofwriting to disk.If you are using floppies, before saving files to floppies, enter:	TX-MIDI-SAFE ON	This will enable the patch I have written.  You can make this permanentby running HMSL, NOT initializing, entering the above, then entering,	SAVE-FORTH2) The MIDI Manager (V1.2 or less) will sometimes hang when receivingSystem Exclusive MessagesOutgoing SysEx is not effected.This was traced to some code that is searching for the end of a circularlist.  As you know, circles have no end so it searches forever.MM V2.0 fixes this problem.Be careful if you havesomething like a Yamaha DX-11 hooked to MIDI input.  Changingpresets or performances from the front panel can cause SysExmessages to be sent to the Mac with dire consequences.3) IMPORTANT!!! - DON'T CRASH YOUR HARD DISK!!!The MIDI Manager file for V1.1 and V1.2 have a 'tm' symbolat the end.  MIDI Manager V2.0.1 does not.  This means that if youhave MM V1.2 installed, then drag V2.0.1 into your System Folder,it will not replace MM V1.2.  They will both start when you reboot.When I first installed MM V2.0.1, my hard disk crashed and I had toreinstall the System.  To avoid this, when changing version of the MIDIManager, remove the old Apple MIDI Driver and the old MIDI Managerfrom your System folder before putting the new ones in.If MIDI Manager Doesn't Work...Some people have reported trouble getting the MIDI manager to work.If you get a message saying it cannot "open a driver" try the following:.in +4Switch from the old Finder to MultiFinder or vice versa.	Remove as many INITs as you can bear to part with from yourSystem Folder and reboot.	See also the Mac Supplement chapter 1..in -4If you are frustrated by the MIDI Manager, write to John Worthingtonat Apple.  He is the nice guy who wrote the MIDI managerand who assures me there are no real problems!	Keep trying. Eventually everyone has gotten it to work.[Or just use the Custom MIDI Tools]-------------------------------------------------Macintosh MIDI Manager Quick Fix for Unclogging DriverIn the manual I mention a problem that can occur if youpost too many notes too far in the future.  The Apple MIDI Driverinput fills up and you can't play any more notes.  You willthen get a message that says: 	MIDIM.SEND - Tried to XMIT for 2 seconds and failed.	There may be too many events in the driver's buffer.There is a trick that we just discoveredthat can clear the driver.  Just set the time far into the futureso that any notes in the buffer come spewing out.  Here is a handyword for that.	MIDI.UNCLOGYou can sometimes reduce the odds of this happening by loweringthe value of the TIME-ADVANCE variable.----------------------------------------------------Mac MIDI Manager Expanded BufferThe buffer in the Apple MIDI Driver only seems tobe able to hold 32 NoteOn/NoteOff pairs before filling up.This can have an effect during dense passagesor when using PAR{ in the Score Entry System.To work around this, I have provided optional daisy chained MIDI portsin the Patchbay called "Aux" and "Buffer" which canhold more notes.Unfortunately, this seems also to slow things downand can cause chords to arpeggiate.  If you want to try thisauxillary buffer, enter:	MIDI.TERM	MIDIM-USE-AUX ON	MIDI.INIT	----------------------------------------------------Alternative TimersYou can now use either the HMSL TIMER1 interrupt or the MIDI Managertimer.  Timer1    60 hertz default, variable rate  MIDI    1000 hertz, can sync with Time Code and MIDI ClockTo use MIDI, enter:	USE.MIDI.TIMINGThe use the Patchbay desk accessory to select time mode.NODE will give you an internal 1 millisecond clock.If you select BEATS it will use MIDI Clock commands.There are various options for MIDI Time CodeYou must Send a MIDI.START message from the remote to startthe clock unless you use the NONE mode.You can also use the Patchbay to connect the HMSL clock tothe printer port timer if you want to run Time Code in there.To get back to TIMER1, enter:	USE.TIMER1.TIMING----------------------------------------------------We are considering providing an alternative to the MIDI Manager.The disadvantage would be that HMSL would not share the MIDI portwith other applications.  The advantage would be that we could providea larger event buffer that is faster.  Let us know what you think.